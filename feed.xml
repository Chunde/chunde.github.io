<?xml version="1.0" encoding="utf-8"?><feed xmlns="http://www.w3.org/2005/Atom" xml:lang="en"><generator uri="https://jekyllrb.com/" version="4.3.4">Jekyll</generator><link href="https://chunde.github.io/feed.xml" rel="self" type="application/atom+xml"/><link href="https://chunde.github.io/" rel="alternate" type="text/html" hreflang="en"/><updated>2025-07-11T05:19:28+00:00</updated><id>https://chunde.github.io/feed.xml</id><title type="html">i‚Ñè‚àÆdÕ©ùõë‚Ä¢üíï</title><subtitle>Chunde&apos;s Personal Pages. </subtitle><entry><title type="html">DNA-Encoded Amino Acids</title><link href="https://chunde.github.io/blog/2025/Amino-Acids-Encoded-by-DNA/" rel="alternate" type="text/html" title="DNA-Encoded Amino Acids"/><published>2025-07-10T21:41:14+00:00</published><updated>2025-07-10T21:41:14+00:00</updated><id>https://chunde.github.io/blog/2025/Amino-Acids-Encoded-by-DNA</id><content type="html" xml:base="https://chunde.github.io/blog/2025/Amino-Acids-Encoded-by-DNA/"><![CDATA[<p>Below is the complete list of the <strong>20 standard amino acids</strong> that can be expressed by DNA sequences, along with their corresponding <strong>DNA codons</strong> (using the standard genetic code). Each entry includes a link to its Wikipedia page for further details.</p> <table> <thead> <tr> <th>Amino Acid</th> <th>3-Letter Code</th> <th>1-Letter Code</th> <th>DNA Codons (RNA Codons)</th> <th>Wikipedia Link</th> <th>Image Link</th> </tr> </thead> <tbody> <tr> <td>Alanine</td> <td>Ala</td> <td>A</td> <td>GCT, GCC, GCA, GCG</td> <td><a href="https://en.wikipedia.org/wiki/Alanine">Alanine</a></td> <td><img src="https://pubchem.ncbi.nlm.nih.gov/image/imgsrv.fcgi?cid=5950&amp;t=l" alt="Alanine"/></td> </tr> <tr> <td>Arginine</td> <td>Arg</td> <td>R</td> <td>CGT, CGC, CGA, CGG, AGA, AGG</td> <td><a href="https://en.wikipedia.org/wiki/Arginine">Arginine</a></td> <td><img src="https://pubchem.ncbi.nlm.nih.gov/image/imgsrv.fcgi?cid=6322&amp;t=l" alt="Arginine"/></td> </tr> <tr> <td>Asparagine</td> <td>Asn</td> <td>N</td> <td>AAT, AAC</td> <td><a href="https://en.wikipedia.org/wiki/Asparagine">Asparagine</a></td> <td><img src="https://pubchem.ncbi.nlm.nih.gov/image/imgsrv.fcgi?cid=6267&amp;t=l" alt="Asparagine"/></td> </tr> <tr> <td>Aspartic acid</td> <td>Asp</td> <td>D</td> <td>GAT, GAC</td> <td><a href="https://en.wikipedia.org/wiki/Aspartic_acid">Aspartic acid</a></td> <td><img src="https://pubchem.ncbi.nlm.nih.gov/image/imgsrv.fcgi?cid=5960&amp;t=l" alt="Aspartic acid"/></td> </tr> <tr> <td>Cysteine</td> <td>Cys</td> <td>C</td> <td>TGT, TGC</td> <td><a href="https://en.wikipedia.org/wiki/Cysteine">Cysteine</a></td> <td><img src="https://pubchem.ncbi.nlm.nih.gov/image/imgsrv.fcgi?cid=5862&amp;t=l" alt="Cysteine"/></td> </tr> <tr> <td>Glutamic acid</td> <td>Glu</td> <td>E</td> <td>GAA, GAG</td> <td><a href="https://en.wikipedia.org/wiki/Glutamic_acid">Glutamic acid</a></td> <td><img src="https://pubchem.ncbi.nlm.nih.gov/image/imgsrv.fcgi?cid=611&amp;t=l" alt="Glutamic acid"/></td> </tr> <tr> <td>Glutamine</td> <td>Gln</td> <td>Q</td> <td>CAA, CAG</td> <td><a href="https://en.wikipedia.org/wiki/Glutamine">Glutamine</a></td> <td><img src="https://pubchem.ncbi.nlm.nih.gov/image/imgsrv.fcgi?cid=5961&amp;t=l" alt="Glutamine"/></td> </tr> <tr> <td>Glycine</td> <td>Gly</td> <td>G</td> <td>GGT, GGC, GGA, GGG</td> <td><a href="https://en.wikipedia.org/wiki/Glycine">Glycine</a></td> <td><img src="https://pubchem.ncbi.nlm.nih.gov/image/imgsrv.fcgi?cid=750&amp;t=l" alt="Glycine"/></td> </tr> <tr> <td>Histidine</td> <td>His</td> <td>H</td> <td>CAT, CAC</td> <td><a href="https://en.wikipedia.org/wiki/Histidine">Histidine</a></td> <td><img src="https://pubchem.ncbi.nlm.nih.gov/image/imgsrv.fcgi?cid=6274&amp;t=l" alt="Histidine"/></td> </tr> <tr> <td>Isoleucine</td> <td>Ile</td> <td>I</td> <td>ATT, ATC, ATA</td> <td><a href="https://en.wikipedia.org/wiki/Isoleucine">Isoleucine</a></td> <td><img src="https://pubchem.ncbi.nlm.nih.gov/image/imgsrv.fcgi?cid=6306&amp;t=l" alt="Isoleucine"/></td> </tr> <tr> <td>Leucine</td> <td>Leu</td> <td>L</td> <td>TTA, TTG, CTT, CTC, CTA, CTG</td> <td><a href="https://en.wikipedia.org/wiki/Leucine">Leucine</a></td> <td><img src="https://pubchem.ncbi.nlm.nih.gov/image/imgsrv.fcgi?cid=6106&amp;t=l" alt="Leucine"/></td> </tr> <tr> <td>Lysine</td> <td>Lys</td> <td>K</td> <td>AAA, AAG</td> <td><a href="https://en.wikipedia.org/wiki/Lysine">Lysine</a></td> <td><img src="https://pubchem.ncbi.nlm.nih.gov/image/imgsrv.fcgi?cid=5962&amp;t=l" alt="Lysine"/></td> </tr> <tr> <td>Methionine</td> <td>Met</td> <td>M</td> <td>ATG (Start codon)</td> <td><a href="https://en.wikipedia.org/wiki/Methionine">Methionine</a></td> <td><img src="https://pubchem.ncbi.nlm.nih.gov/image/imgsrv.fcgi?cid=6137&amp;t=l" alt="Methionine"/></td> </tr> <tr> <td>Phenylalanine</td> <td>Phe</td> <td>F</td> <td>TTT, TTC</td> <td><a href="https://en.wikipedia.org/wiki/Phenylalanine">Phenylalanine</a></td> <td><img src="https://pubchem.ncbi.nlm.nih.gov/image/imgsrv.fcgi?cid=6140&amp;t=l" alt="Phenylalanine"/></td> </tr> <tr> <td>Proline</td> <td>Pro</td> <td>P</td> <td>CCT, CCC, CCA, CCG</td> <td><a href="https://en.wikipedia.org/wiki/Proline">Proline</a></td> <td><img src="https://pubchem.ncbi.nlm.nih.gov/image/imgsrv.fcgi?cid=614&amp;t=l" alt="Proline"/></td> </tr> <tr> <td>Serine</td> <td>Ser</td> <td>S</td> <td>TCT, TCC, TCA, TCG, AGT, AGC</td> <td><a href="https://en.wikipedia.org/wiki/Serine">Serine</a></td> <td><img src="https://pubchem.ncbi.nlm.nih.gov/image/imgsrv.fcgi?cid=5951&amp;t=l" alt="Serine"/></td> </tr> <tr> <td>Threonine</td> <td>Thr</td> <td>T</td> <td>ACT, ACC, ACA, ACG</td> <td><a href="https://en.wikipedia.org/wiki/Threonine">Threonine</a></td> <td><img src="https://pubchem.ncbi.nlm.nih.gov/image/imgsrv.fcgi?cid=6288&amp;t=l" alt="Threonine"/></td> </tr> <tr> <td>Tryptophan</td> <td>Trp</td> <td>W</td> <td>TGG</td> <td><a href="https://en.wikipedia.org/wiki/Tryptophan">Tryptophan</a></td> <td><img src="https://pubchem.ncbi.nlm.nih.gov/image/imgsrv.fcgi?cid=6305&amp;t=l" alt="Tryptophan"/></td> </tr> <tr> <td>Tyrosine</td> <td>Tyr</td> <td>Y</td> <td>TAT, TAC</td> <td><a href="https://en.wikipedia.org/wiki/Tyrosine">Tyrosine</a></td> <td><img src="https://pubchem.ncbi.nlm.nih.gov/image/imgsrv.fcgi?cid=6057&amp;t=l" alt="Tyrosine"/></td> </tr> <tr> <td>Valine</td> <td>Val</td> <td>V</td> <td>GTT, GTC, GTA, GTG</td> <td><a href="https://en.wikipedia.org/wiki/Valine">Valine</a></td> <td><img src="https://pubchem.ncbi.nlm.nih.gov/image/imgsrv.fcgi?cid=6287&amp;t=l" alt="Valine"/></td> </tr> </tbody> </table> <hr/> <h3 id="amino-acid-periodic-table-dna-codon-based"><strong>Amino Acid ‚ÄúPeriodic Table‚Äù (DNA Codon-Based)</strong></h3> <style>.amino-periodic{display:grid;grid-template-columns:repeat(6,1fr);gap:10px;max-width:900px;margin:0 auto;font-family:Arial,sans-serif}.amino-acid{border:2px solid #333;padding:8px;text-align:center;border-radius:8px;box-shadow:0 2px 4px rgba(0,0,0,0.1)}.nonpolar{background-color:#fff9c4;border-color:#ffd700}.polar{background-color:#bbdefb;border-color:#42a5f5}.acidic{background-color:#ffcdd2;border-color:#ef5350}.basic{background-color:#c8e6c9;border-color:#66bb6a}.amino-code{font-size:18px;font-weight:bold;margin-bottom:5px}.amino-codon{font-size:11px;color:#555;margin-bottom:5px}.amino-img{width:60px;height:60px;object-fit:contain;margin:0 auto;display:block;background:white;padding:3px;border-radius:3px}.property-key{grid-column:1 / -1;text-align:center;margin:15px 0;font-weight:bold}</style> <div class="amino-periodic"> <div class="property-key">AMINO ACID PERIODIC TABLE (DNA CODON VERSION)</div> <div class="amino-acid nonpolar"> <div class="amino-code">Gly (G)</div> <div class="amino-codon">GGT GGC<br/>GGA GGG</div> <img class="amino-img" src="https://pubchem.ncbi.nlm.nih.gov/image/imgsrv.fcgi?cid=750&amp;t=l" alt="Glycine"/> </div> <div class="amino-acid nonpolar"> <div class="amino-code">Ala (A)</div> <div class="amino-codon">GCT GCC<br/>GCA GCG</div> <img class="amino-img" src="https://pubchem.ncbi.nlm.nih.gov/image/imgsrv.fcgi?cid=5950&amp;t=l" alt="Alanine"/> </div> <div class="amino-acid nonpolar"> <div class="amino-code">Val (V)</div> <div class="amino-codon">GTT GTC<br/>GTA GTG</div> <img class="amino-img" src="https://pubchem.ncbi.nlm.nih.gov/image/imgsrv.fcgi?cid=6287&amp;t=l" alt="Valine"/> </div> <div class="amino-acid nonpolar"> <div class="amino-code">Leu (L)</div> <div class="amino-codon">TTA TTG<br/>CTT CTC<br/>CTA CTG</div> <img class="amino-img" src="https://pubchem.ncbi.nlm.nih.gov/image/imgsrv.fcgi?cid=6106&amp;t=l" alt="Leucine"/> </div> <div class="amino-acid nonpolar"> <div class="amino-code">Ile (I)</div> <div class="amino-codon">ATT ATC<br/>ATA</div> <img class="amino-img" src="https://pubchem.ncbi.nlm.nih.gov/image/imgsrv.fcgi?cid=6306&amp;t=l" alt="Isoleucine"/> </div> <div class="amino-acid nonpolar"> <div class="amino-code">Met (M)</div> <div class="amino-codon">ATG</div> <img class="amino-img" src="https://pubchem.ncbi.nlm.nih.gov/image/imgsrv.fcgi?cid=6137&amp;t=l" alt="Methionine"/> </div> <div class="amino-acid polar"> <div class="amino-code">Ser (S)</div> <div class="amino-codon">TCT TCC<br/>TCA TCG<br/>AGT AGC</div> <img class="amino-img" src="https://pubchem.ncbi.nlm.nih.gov/image/imgsrv.fcgi?cid=5951&amp;t=l" alt="Serine"/> </div> <div class="amino-acid polar"> <div class="amino-code">Thr (T)</div> <div class="amino-codon">ACT ACC<br/>ACA ACG</div> <img class="amino-img" src="https://pubchem.ncbi.nlm.nih.gov/image/imgsrv.fcgi?cid=6288&amp;t=l" alt="Threonine"/> </div> <div class="amino-acid polar"> <div class="amino-code">Cys (C)</div> <div class="amino-codon">TGT TGC</div> <img class="amino-img" src="https://pubchem.ncbi.nlm.nih.gov/image/imgsrv.fcgi?cid=5862&amp;t=l" alt="Cysteine"/> </div> <div class="amino-acid polar"> <div class="amino-code">Asn (N)</div> <div class="amino-codon">AAT AAC</div> <img class="amino-img" src="https://pubchem.ncbi.nlm.nih.gov/image/imgsrv.fcgi?cid=6267&amp;t=l" alt="Asparagine"/> </div> <div class="amino-acid polar"> <div class="amino-code">Gln (Q)</div> <div class="amino-codon">CAA CAG</div> <img class="amino-img" src="https://pubchem.ncbi.nlm.nih.gov/image/imgsrv.fcgi?cid=5961&amp;t=l" alt="Glutamine"/> </div> <div class="amino-acid polar"> <div class="amino-code">Tyr (Y)</div> <div class="amino-codon">TAT TAC</div> <img class="amino-img" src="https://pubchem.ncbi.nlm.nih.gov/image/imgsrv.fcgi?cid=6057&amp;t=l" alt="Tyrosine"/> </div> <div class="amino-acid acidic"> <div class="amino-code">Asp (D)</div> <div class="amino-codon">GAT GAC</div> <img class="amino-img" src="https://pubchem.ncbi.nlm.nih.gov/image/imgsrv.fcgi?cid=5960&amp;t=l" alt="Aspartic acid"/> </div> <div class="amino-acid acidic"> <div class="amino-code">Glu (E)</div> <div class="amino-codon">GAA GAG</div> <img class="amino-img" src="https://pubchem.ncbi.nlm.nih.gov/image/imgsrv.fcgi?cid=611&amp;t=l" alt="Glutamic acid"/> </div> <div class="amino-acid basic"> <div class="amino-code">Lys (K)</div> <div class="amino-codon">AAA AAG</div> <img class="amino-img" src="https://pubchem.ncbi.nlm.nih.gov/image/imgsrv.fcgi?cid=5962&amp;t=l" alt="Lysine"/> </div> <div class="amino-acid basic"> <div class="amino-code">Arg (R)</div> <div class="amino-codon">CGT CGC<br/>CGA CGG<br/>AGA AGG</div> <img class="amino-img" src="https://pubchem.ncbi.nlm.nih.gov/image/imgsrv.fcgi?cid=6322&amp;t=l" alt="Arginine"/> </div> <div class="amino-acid basic"> <div class="amino-code">His (H)</div> <div class="amino-codon">CAT CAC</div> <img class="amino-img" src="https://pubchem.ncbi.nlm.nih.gov/image/imgsrv.fcgi?cid=6274&amp;t=l" alt="Histidine"/> </div> <div class="amino-acid nonpolar"> <div class="amino-code">Pro (P)</div> <div class="amino-codon">CCT CCC<br/>CCA CCG</div> <img class="amino-img" src="https://pubchem.ncbi.nlm.nih.gov/image/imgsrv.fcgi?cid=614&amp;t=l" alt="Proline"/> </div> <div class="amino-acid nonpolar"> <div class="amino-code">Phe (F)</div> <div class="amino-codon">TTT TTC</div> <img class="amino-img" src="https://pubchem.ncbi.nlm.nih.gov/image/imgsrv.fcgi?cid=6140&amp;t=l" alt="Phenylalanine"/> </div> <div class="amino-acid nonpolar"> <div class="amino-code">Trp (W)</div> <div class="amino-codon">TGG</div> <img class="amino-img" src="https://pubchem.ncbi.nlm.nih.gov/image/imgsrv.fcgi?cid=6305&amp;t=l" alt="Tryptophan"/> </div> <div class="property-key"> <span style="background:#FFF9C4; padding:3px 8px; margin:0 5px;">Nonpolar</span> <span style="background:#BBDEFB; padding:3px 8px; margin:0 5px;">Polar</span> <span style="background:#FFCDD2; padding:3px 8px; margin:0 5px;">Acidic</span> <span style="background:#C8E6C9; padding:3px 8px; margin:0 5px;">Basic</span> </div> </div> <hr/> <h3 id="alternative-layout-single-grid"><strong>Alternative Layout (Single Grid)</strong></h3> <table> <thead> <tr> <th>¬†</th> <th><strong>Nonpolar</strong></th> <th><strong>Polar</strong></th> <th><strong>Acidic</strong></th> <th><strong>Basic</strong></th> </tr> </thead> <tbody> <tr> <td><strong>1</strong></td> <td>G (Gly)</td> <td>S (Ser)</td> <td>D (Asp)</td> <td>H (His)</td> </tr> <tr> <td><strong>2</strong></td> <td>A (Ala)</td> <td>T (Thr)</td> <td>E (Glu)</td> <td>K (Lys)</td> </tr> <tr> <td><strong>3</strong></td> <td>V (Val)</td> <td>C (Cys)</td> <td>¬†</td> <td>R (Arg)</td> </tr> <tr> <td><strong>4</strong></td> <td>L (Leu)</td> <td>N (Asn)</td> <td>¬†</td> <td>¬†</td> </tr> <tr> <td><strong>5</strong></td> <td>I (Ile)</td> <td>Q (Gln)</td> <td>¬†</td> <td>¬†</td> </tr> <tr> <td><strong>6</strong></td> <td>M (Met)</td> <td>Y (Tyr)</td> <td>¬†</td> <td>¬†</td> </tr> <tr> <td><strong>7</strong></td> <td>F (Phe)</td> <td>¬†</td> <td>¬†</td> <td>¬†</td> </tr> <tr> <td><strong>8</strong></td> <td>W (Trp)</td> <td>¬†</td> <td>¬†</td> <td>¬†</td> </tr> <tr> <td><strong>9</strong></td> <td>P (Pro)</td> <td>¬†</td> <td>¬†</td> <td>¬†</td> </tr> </tbody> </table> <hr/>]]></content><author><name></name></author><category term="biology"/><category term="genetics"/><category term="amino_acids"/><category term="DNA"/><category term="translation"/><summary type="html"><![CDATA[A table listing all 20 standard amino acids with their corresponding DNA codons and Wikipedia links.]]></summary></entry><entry><title type="html">Gapped 1D Systems</title><link href="https://chunde.github.io/blog/2025/Gapped-1D-Systems-and-Low-Entanglement-States/" rel="alternate" type="text/html" title="Gapped 1D Systems"/><published>2025-07-08T23:12:57+00:00</published><updated>2025-07-08T23:12:57+00:00</updated><id>https://chunde.github.io/blog/2025/Gapped-1D-Systems-and-Low-Entanglement-States</id><content type="html" xml:base="https://chunde.github.io/blog/2025/Gapped-1D-Systems-and-Low-Entanglement-States/"><![CDATA[<h3 id="key-concepts">Key Concepts</h3> <ol> <li><strong>Gapped System</strong>: A quantum system where the ground state is separated from excited states by a finite energy gap \(\Delta &gt; 0\).</li> <li><strong>Area Law</strong>: In 1D gapped systems, entanglement entropy typically satisfies \(S \sim \text{constant}\) (rather than scaling with system size).</li> </ol> <h3 id="discrete-example-spin-12-chain-with-nearest-neighbor-coupling">Discrete Example: Spin-1/2 Chain with Nearest-Neighbor Coupling</h3> <p>Consider a 4-site spin chain with Hamiltonian: \(H = -J\sum_{i=1}^{3}\sigma_i^z\sigma_{i+1}^z\) where \(J &gt; 0\) and \(\sigma^z\) is the Pauli matrix.</p> <h4 id="properties">Properties:</h4> <ol> <li> <table> <tbody> <tr> <td><strong>Ground State</strong>: $$</td> <td>\psi_0\rangle =</td> <td>\uparrow\uparrow\uparrow\uparrow\rangle\(or\)</td> <td>\downarrow\downarrow\downarrow\downarrow\rangle$$</td> </tr> </tbody> </table> </li> <li><strong>Energy Gap</strong>: \(\Delta = 2J\) (to flip any single spin)</li> <li><strong>Entanglement</strong>: For any bipartition, the entanglement entropy \(S = 0\) because the ground state is separable.</li> </ol> <h4 id="why-low-entanglement">Why Low Entanglement?</h4> <ul> <li>The gap \(\Delta\) prevents long-range quantum correlations</li> <li>Local perturbations cannot generate extensive entanglement</li> <li>Satisfies the 1D area law: \(S \leq \text{constant}\) independent of system size</li> </ul> <p>This demonstrates how gapped 1D systems naturally suppress entanglement growth.</p>]]></content><author><name></name></author><category term="Physics"/><category term="Quantum-Physics"/><category term="Condensed-Matter"/><category term="Entanglement"/><summary type="html"><![CDATA[Gapped 1D systems exhibit low entanglement due to their energy spectrum properties.]]></summary></entry><entry><title type="html">Gapped 1D Systems and Area Law</title><link href="https://chunde.github.io/blog/2025/Gapped-1D-Systems-and-Area-Law/" rel="alternate" type="text/html" title="Gapped 1D Systems and Area Law"/><published>2025-07-07T23:45:49+00:00</published><updated>2025-07-07T23:45:49+00:00</updated><id>https://chunde.github.io/blog/2025/Gapped-1D-Systems-and-Area-Law</id><content type="html" xml:base="https://chunde.github.io/blog/2025/Gapped-1D-Systems-and-Area-Law/"><![CDATA[<h3 id="1-why-gapped-1d-systems-have-low-entanglement"><strong>1. Why Gapped 1D Systems Have Low Entanglement</strong></h3> <p>Gapped 1D quantum systems (e.g., spin chains) typically exhibit <strong>low entanglement</strong> because their ground states avoid long-range quantum correlations. A discrete example is the <strong>Majumdar-Ghosh spin chain</strong>:</p> <ul> <li>Consider a 1D spin-1/2 chain with Hamiltonian:<br/> \(H = \sum_i \left( \vec{S}_i \cdot \vec{S}_{i+1} + \frac{1}{2} \vec{S}_i \cdot \vec{S}_{i+2} \right)\)</li> <li>The ground state is a <strong>dimerized product state</strong> (e.g., spins form singlets on alternating bonds):<br/> \(|\psi\rangle = (|01\rangle - |10\rangle) \otimes (|01\rangle - |10\rangle) \otimes \dots\)</li> <li>The entanglement entropy of any bipartition is <strong>zero</strong> (no entanglement across cuts) because the state is a product of local singlets.</li> </ul> <p>Gapped systems generally satisfy the <strong>area law</strong>, meaning entanglement entropy scales with the boundary size (here, a constant in 1D).</p> <hr/> <h3 id="2-area-law-explained-with-a-simple-example"><strong>2. Area Law Explained with a Simple Example</strong></h3> <p>The <strong>area law</strong> states that the entanglement entropy \(S_A\) of a subsystem \(A\) scales with its boundary size (not volume).</p> <h4 id="example-1d-spin-chain-with-nearest-neighbor-coupling"><strong>Example: 1D Spin Chain with Nearest-Neighbor Coupling</strong></h4> <p>Hamiltonian: \(H = -J \sum_i \sigma_i^z \sigma_{i+1}^z\) (Ising model in its gapped phase).<br/> Ground state (for \(J &gt; 0\)): \(|\psi\rangle = |\uparrow \uparrow \dots \uparrow\rangle\) or \(|\downarrow \downarrow \dots \downarrow\rangle\).<br/> Bipartition the chain into \(A\) (first \(L\) spins) and \(B\) (rest).<br/> Reduced density matrix \(\rho_A\) is pure (e.g., \(\rho_A = |\uparrow \dots \uparrow\rangle \langle \uparrow \dots \uparrow|\)), so \(S_A = 0\).</p> <p>For slightly entangled states (e.g., perturbed ground states), \(S_A\) remains <strong>constant</strong> (independent of \(L\)), obeying the area law. In higher dimensions, \(S_A \sim \text{boundary area of } A\).</p> <h4 id="violations-of-area-law"><strong>Violations of Area Law</strong></h4> <ul> <li>Critical (gapless) systems in 1D: \(S_A \sim \log L\) (logarithmic divergence).</li> <li>Highly excited states: Volume-law scaling (\(S_A \sim L\)).</li> </ul> <p>The area law is a hallmark of <strong>low-complexity quantum states</strong>, relevant for efficient numerical simulations (e.g., DMRG, tensor networks).</p>]]></content><author><name></name></author><category term="Quantum"/><category term="Physics,"/><category term="Entanglement,"/><category term="Area"/><category term="Law,"/><category term="Condensed"/><category term="Matter"/><summary type="html"><![CDATA[Explanation of low entanglement in gapped 1D systems and the area law with discrete examples.]]></summary></entry><entry><title type="html">MySQL Management Commands</title><link href="https://chunde.github.io/blog/2025/MySQL-Common-Commands/" rel="alternate" type="text/html" title="MySQL Management Commands"/><published>2025-07-05T21:30:46+00:00</published><updated>2025-07-05T21:30:46+00:00</updated><id>https://chunde.github.io/blog/2025/MySQL-Common-Commands</id><content type="html" xml:base="https://chunde.github.io/blog/2025/MySQL-Common-Commands/"><![CDATA[<table> <thead> <tr> <th>Command</th> <th>Explanation</th> </tr> </thead> <tbody> <tr> <td><code class="language-plaintext highlighter-rouge">mysql -u [username] -p</code></td> <td>Connects to MySQL server with username/prompt for password</td> </tr> <tr> <td><code class="language-plaintext highlighter-rouge">SHOW DATABASES;</code></td> <td>Lists all databases on the server</td> </tr> <tr> <td><code class="language-plaintext highlighter-rouge">USE [database_name];</code></td> <td>Selects a database for operations</td> </tr> <tr> <td><code class="language-plaintext highlighter-rouge">SHOW TABLES;</code></td> <td>Displays all tables in the current database</td> </tr> <tr> <td><code class="language-plaintext highlighter-rouge">DESCRIBE [table_name];</code></td> <td>Shows the structure of a table (columns, types, etc.)</td> </tr> <tr> <td><code class="language-plaintext highlighter-rouge">CREATE DATABASE [db_name];</code></td> <td>Creates a new database</td> </tr> <tr> <td><code class="language-plaintext highlighter-rouge">DROP DATABASE [db_name];</code></td> <td>Permanently deletes a database</td> </tr> <tr> <td><code class="language-plaintext highlighter-rouge">CREATE TABLE [table_name] (...);</code></td> <td>Creates a new table with specified columns</td> </tr> <tr> <td><code class="language-plaintext highlighter-rouge">ALTER TABLE [table_name] ADD [column] [type];</code></td> <td>Adds a column to an existing table</td> </tr> <tr> <td><code class="language-plaintext highlighter-rouge">GRANT ALL ON [db_name].* TO '[user]'@'[host]';</code></td> <td>Grants full privileges to a user on a database</td> </tr> <tr> <td><code class="language-plaintext highlighter-rouge">FLUSH PRIVILEGES;</code></td> <td>Reloads privilege tables after permission changes</td> </tr> <tr> <td><code class="language-plaintext highlighter-rouge">SHOW PROCESSLIST;</code></td> <td>Displays active server threads/queries</td> </tr> <tr> <td><code class="language-plaintext highlighter-rouge">KILL [process_id];</code></td> <td>Terminates a running MySQL process</td> </tr> <tr> <td><code class="language-plaintext highlighter-rouge">mysqldump -u [user] -p [db_name] &gt; backup.sql</code></td> <td>Creates a database backup file</td> </tr> <tr> <td><code class="language-plaintext highlighter-rouge">SOURCE backup.sql;</code></td> <td>Restores database from backup file</td> </tr> <tr> <td><code class="language-plaintext highlighter-rouge">SELECT User, Host FROM mysql.user;</code></td> <td>Lists all MySQL user accounts</td> </tr> </tbody> </table> <p><strong>Key Notes:</strong></p> <ol> <li>Most commands require semicolon <code class="language-plaintext highlighter-rouge">;</code> termination</li> <li>Administrative commands often require root/administrative privileges</li> <li>Backup/restore operations are typically run from system shell (not MySQL prompt)</li> </ol> <p>For user management, common commands include:</p> <ul> <li><code class="language-plaintext highlighter-rouge">CREATE USER</code></li> <li><code class="language-plaintext highlighter-rouge">DROP USER</code></li> <li><code class="language-plaintext highlighter-rouge">SET PASSWORD</code></li> <li><code class="language-plaintext highlighter-rouge">RENAME USER</code></li> </ul> <p>For performance monitoring:</p> <ul> <li><code class="language-plaintext highlighter-rouge">SHOW STATUS</code></li> <li><code class="language-plaintext highlighter-rouge">SHOW VARIABLES</code></li> <li><code class="language-plaintext highlighter-rouge">EXPLAIN [query]</code></li> </ul> <p>Remember to always backup databases before major operations like <code class="language-plaintext highlighter-rouge">DROP</code> or structural changes.</p>]]></content><author><name></name></author><category term="MySQL"/><category term="Database"/><category term="SQL"/><category term="Administration"/><summary type="html"><![CDATA[A reference table of essential MySQL administration commands with explanations]]></summary></entry><entry><title type="html">WAMP vs XAMPP Comparison</title><link href="https://chunde.github.io/blog/2025/WAMP-vs-XAMPP-for-WordPress-Development/" rel="alternate" type="text/html" title="WAMP vs XAMPP Comparison"/><published>2025-07-05T12:57:40+00:00</published><updated>2025-07-05T12:57:40+00:00</updated><id>https://chunde.github.io/blog/2025/WAMP-vs-XAMPP-for-WordPress-Development</id><content type="html" xml:base="https://chunde.github.io/blog/2025/WAMP-vs-XAMPP-for-WordPress-Development/"><![CDATA[<h3 id="comparison-wamp-vs-xampp"><strong>Comparison: WAMP vs XAMPP</strong></h3> <table> <thead> <tr> <th>Feature</th> <th>WAMP</th> <th>XAMPP</th> </tr> </thead> <tbody> <tr> <td><strong>OS Support</strong></td> <td>Windows only</td> <td>Cross-platform (Win/macOS/Linux)</td> </tr> <tr> <td><strong>Components</strong></td> <td>Apache, MySQL, PHP</td> <td>Apache, MariaDB, PHP, Perl</td> </tr> <tr> <td><strong>Control Panel</strong></td> <td>System tray icon</td> <td>Dedicated control panel</td> </tr> <tr> <td><strong>Configuration</strong></td> <td>More Windows-friendly</td> <td>Slightly more complex</td> </tr> <tr> <td><strong>Portability</strong></td> <td>Less portable</td> <td>More portable (can run from USB)</td> </tr> <tr> <td><strong>Multiple PHP Versions</strong></td> <td>Supported via add-ons</td> <td>Limited without manual config</td> </tr> <tr> <td><strong>Default Ports</strong></td> <td>Apache: 80, MySQL: 3306</td> <td>Same</td> </tr> </tbody> </table> <h3 id="detailed-setup-instructions"><strong>Detailed Setup Instructions</strong></h3> <h4 id="option-1-wamp-setup"><strong>Option 1: WAMP Setup</strong></h4> <ol> <li><strong>Download</strong>: Get WAMP Server from <a href="https://www.wampserver.com">wampserver.com</a></li> <li><strong>Install</strong>: Run installer as Administrator, accept all defaults</li> <li><strong>Verify Installation</strong>: <ul> <li>Launch WAMP from Start Menu</li> <li>Wait for icon to turn green in system tray</li> <li>Visit <code class="language-plaintext highlighter-rouge">http://localhost</code> to see WAMP homepage</li> </ul> </li> <li><strong>WordPress Installation</strong>: <div class="language-bash highlighter-rouge"><div class="highlight"><pre class="highlight"><code><span class="nb">cd </span>C:<span class="se">\w</span>amp<span class="se">\w</span>ww<span class="se">\</span>
git clone https://github.com/WordPress/WordPress.git mywebsite
</code></pre></div> </div> </li> <li><strong>Create Database</strong>: <ul> <li>Open <code class="language-plaintext highlighter-rouge">http://localhost/phpmyadmin</code></li> <li>Create new database named <code class="language-plaintext highlighter-rouge">mywebsite_db</code></li> </ul> </li> </ol> <h4 id="option-2-xampp-setup"><strong>Option 2: XAMPP Setup</strong></h4> <ol> <li><strong>Download</strong>: Get XAMPP from <a href="https://www.apachefriends.org">apachefriends.org</a></li> <li><strong>Install</strong>: <ul> <li>Run installer (disable any running Skype/TeamViewer as they use port 80)</li> <li>Select components: Apache, MySQL, PHP, phpMyAdmin</li> </ul> </li> <li><strong>Launch Control Panel</strong>: <ul> <li>Start Apache and MySQL services</li> <li>Verify at <code class="language-plaintext highlighter-rouge">http://localhost</code></li> </ul> </li> <li><strong>WordPress Installation</strong>: <div class="language-bash highlighter-rouge"><div class="highlight"><pre class="highlight"><code><span class="nb">cd </span>C:<span class="se">\x</span>ampp<span class="se">\h</span>tdocs<span class="se">\</span>
git clone https://github.com/WordPress/WordPress.git site1
</code></pre></div> </div> </li> </ol> <h3 id="hosting-multiple-websites"><strong>Hosting Multiple Websites</strong></h3> <h4 id="method-for-both-wampxampp"><strong>Method for Both WAMP/XAMPP:</strong></h4> <ol> <li><strong>Create Virtual Hosts</strong>: <ul> <li>Edit <code class="language-plaintext highlighter-rouge">httpd-vhosts.conf</code> (WAMP: <code class="language-plaintext highlighter-rouge">C:\wamp\bin\apache\apacheX.X.X\conf\extra\</code>, XAMPP: similar path) ```apache</li> </ul> <p>&lt;VirtualHost *:80&gt; DocumentRoot ‚ÄúC:/wamp/www/site1‚Äù ServerName site1.test &lt;/VirtualHost&gt; &lt;VirtualHost *:80&gt; DocumentRoot ‚ÄúC:/wamp/www/site2‚Äù ServerName site2.test &lt;/VirtualHost&gt; ```</p> </li> <li><strong>Edit Hosts File</strong>: <ul> <li>Add to <code class="language-plaintext highlighter-rouge">C:\Windows\System32\drivers\etc\hosts</code>: <div class="language-plaintext highlighter-rouge"><div class="highlight"><pre class="highlight"><code>127.0.0.1 site1.test
127.0.0.1 site2.test
</code></pre></div> </div> </li> </ul> </li> <li><strong>Restart Services</strong> and access sites at <code class="language-plaintext highlighter-rouge">http://site1.test</code> and <code class="language-plaintext highlighter-rouge">http://site2.test</code></li> </ol> <h3 id="critical-configuration-notes"><strong>Critical Configuration Notes</strong></h3> <ol> <li>Always run installers as Administrator</li> <li>Configure Windows Firewall to allow Apache/MySQL</li> <li>For WordPress: set <code class="language-plaintext highlighter-rouge">define('WP_DEBUG', true);</code> in <code class="language-plaintext highlighter-rouge">wp-config.php</code> during development</li> <li>Recommended to use different ports if running multiple instances: <div class="language-apache highlighter-rouge"><div class="highlight"><pre class="highlight"><code><span class="nc">Listen</span> 8080
<span class="p">&lt;</span><span class="nl">VirtualHost</span><span class="sr"> *:8080</span><span class="p">&gt;
</span>    <span class="c"># config for second site</span>
<span class="p">&lt;/</span><span class="nl">VirtualHost</span><span class="p">&gt;
</span></code></pre></div> </div> </li> </ol> <p>For Docker enthusiasts, consider using <code class="language-plaintext highlighter-rouge">docker-compose</code> with WordPress official images for even better isolation between sites.</p>]]></content><author><name></name></author><category term="Web-Server"/><category term="Localhost"/><category term="WordPress"/><category term="WAMP"/><category term="XAMPP"/><category term="Web-Development"/><summary type="html"><![CDATA[Detailed comparison and setup guide for WAMP and XAMPP solutions for WordPress development]]></summary></entry><entry><title type="html">Solar System Planets Data</title><link href="https://chunde.github.io/blog/2025/Solar-System-Planets-Summary/" rel="alternate" type="text/html" title="Solar System Planets Data"/><published>2025-07-04T21:10:02+00:00</published><updated>2025-07-04T21:10:02+00:00</updated><id>https://chunde.github.io/blog/2025/Solar-System-Planets-Summary</id><content type="html" xml:base="https://chunde.github.io/blog/2025/Solar-System-Planets-Summary/"><![CDATA[<p>Here‚Äôs a comprehensive table of solar system planets ordered by their distance from the Sun:</p> <table> <thead> <tr> <th>Planet</th> <th>Distance from Sun (AU)</th> <th>Diameter (km)</th> <th>Mass (Earth=1)</th> <th>Orbital Period (Earth days)</th> <th>Rotation Period (Earth days)</th> <th>Number of Moons</th> <th>Notable Features</th> </tr> </thead> <tbody> <tr> <td>Mercury</td> <td>0.39</td> <td>4,880</td> <td>0.055</td> <td>88</td> <td>58.6</td> <td>0</td> <td>Extreme temperature variations</td> </tr> <tr> <td>Venus</td> <td>0.72</td> <td>12,104</td> <td>0.815</td> <td>225</td> <td>243 (retrograde)</td> <td>0</td> <td>Thick CO‚ÇÇ atmosphere</td> </tr> <tr> <td>Earth</td> <td>1.00</td> <td>12,742</td> <td>1.000</td> <td>365.25</td> <td>1</td> <td>1</td> <td>Only known life-bearing planet</td> </tr> <tr> <td>Mars</td> <td>1.52</td> <td>6,779</td> <td>0.107</td> <td>687</td> <td>1.03</td> <td>2</td> <td>Largest volcano (Olympus Mons)</td> </tr> <tr> <td>Jupiter</td> <td>5.20</td> <td>139,822</td> <td>317.8</td> <td>4,333</td> <td>0.41</td> <td>95</td> <td>Largest planet, Great Red Spot</td> </tr> <tr> <td>Saturn</td> <td>9.58</td> <td>116,464</td> <td>95.2</td> <td>10,759</td> <td>0.45</td> <td>146</td> <td>Prominent ring system</td> </tr> <tr> <td>Uranus</td> <td>19.22</td> <td>50,724</td> <td>14.5</td> <td>30,687</td> <td>0.72 (retrograde)</td> <td>28</td> <td>Extreme axial tilt (98¬∞)</td> </tr> <tr> <td>Neptune</td> <td>30.05</td> <td>49,244</td> <td>17.1</td> <td>60,190</td> <td>0.67</td> <td>16</td> <td>Strongest winds in solar system</td> </tr> </tbody> </table> <p>Key notes:</p> <ol> <li>AU (Astronomical Unit) = average Earth-Sun distance ‚âà 149.6 million km</li> <li>Moon counts are as of 2025 (particularly variable for gas giants as new moons are discovered)</li> <li>Rotation periods are sidereal (relative to stars)</li> <li>Dwarf planets (Pluto, Ceres, etc.) are not included in this table</li> </ol> <p>The table shows how planetary characteristics change with distance from the Sun, from the small, rocky inner planets to the massive gas giants of the outer solar system.</p>]]></content><author><name></name></author><category term="science"/><category term="astronomy"/><category term="planets"/><category term="solar-system"/><category term="space"/><summary type="html"><![CDATA[Comparative table of planets in our solar system sorted by distance from the Sun]]></summary></entry><entry><title type="html">Docker Command Cheatsheet</title><link href="https://chunde.github.io/blog/2025/Docker-Image-and-Container-Commands/" rel="alternate" type="text/html" title="Docker Command Cheatsheet"/><published>2025-07-04T20:45:17+00:00</published><updated>2025-07-04T20:45:17+00:00</updated><id>https://chunde.github.io/blog/2025/Docker-Image-and-Container-Commands</id><content type="html" xml:base="https://chunde.github.io/blog/2025/Docker-Image-and-Container-Commands/"><![CDATA[<h3 id="common-docker-commands">Common Docker Commands</h3> <table> <thead> <tr> <th><strong>Operation</strong></th> <th><strong>Command</strong></th> <th><strong>Explanation</strong></th> </tr> </thead> <tbody> <tr> <td><strong>Run a container</strong></td> <td><code class="language-plaintext highlighter-rouge">docker run -it &lt;image_name&gt;</code></td> <td>Starts a container interactively (<code class="language-plaintext highlighter-rouge">-i</code> keeps STDIN open, <code class="language-plaintext highlighter-rouge">-t</code> allocates a pseudo-TTY).</td> </tr> <tr> <td><strong>SSH into a container</strong></td> <td><code class="language-plaintext highlighter-rouge">docker exec -it &lt;container_id&gt; /bin/bash</code></td> <td>Executes an interactive bash shell inside a running container.</td> </tr> <tr> <td><strong>Bind local folder</strong></td> <td><code class="language-plaintext highlighter-rouge">docker run -v /host/path:/container/path &lt;image_name&gt;</code></td> <td>Mounts a host directory (<code class="language-plaintext highlighter-rouge">/host/path</code>) into the container (<code class="language-plaintext highlighter-rouge">/container/path</code>).</td> </tr> <tr> <td><strong>Change port binding</strong></td> <td><code class="language-plaintext highlighter-rouge">docker run -p &lt;host_port&gt;:&lt;container_port&gt; &lt;image_name&gt;</code></td> <td>Maps the host‚Äôs port (e.g., <code class="language-plaintext highlighter-rouge">8080</code>) to the container‚Äôs port (e.g., <code class="language-plaintext highlighter-rouge">80</code>).</td> </tr> <tr> <td><strong>List running containers</strong></td> <td><code class="language-plaintext highlighter-rouge">docker ps</code></td> <td>Shows all active containers. Add <code class="language-plaintext highlighter-rouge">-a</code> to include stopped containers.</td> </tr> <tr> <td><strong>Remove a container</strong></td> <td><code class="language-plaintext highlighter-rouge">docker rm &lt;container_id&gt;</code></td> <td>Deletes a stopped container. Use <code class="language-plaintext highlighter-rouge">-f</code> to force removal of a running container.</td> </tr> <tr> <td><strong>List images</strong></td> <td><code class="language-plaintext highlighter-rouge">docker images</code></td> <td>Displays all locally stored Docker images.</td> </tr> <tr> <td><strong>Remove an image</strong></td> <td><code class="language-plaintext highlighter-rouge">docker rmi &lt;image_id&gt;</code></td> <td>Deletes a Docker image. Use <code class="language-plaintext highlighter-rouge">-f</code> to force removal.</td> </tr> <tr> <td><strong>Build an image</strong></td> <td><code class="language-plaintext highlighter-rouge">docker build -t &lt;tag_name&gt; &lt;path_to_Dockerfile&gt;</code></td> <td>Builds an image from a <code class="language-plaintext highlighter-rouge">Dockerfile</code> in the specified directory.</td> </tr> <tr> <td><strong>Copy files to container</strong></td> <td><code class="language-plaintext highlighter-rouge">docker cp /host/file &lt;container_id&gt;:/container/path</code></td> <td>Copies a file from the host to a running container.</td> </tr> <tr> <td><strong>View logs</strong></td> <td><code class="language-plaintext highlighter-rouge">docker logs &lt;container_id&gt;</code></td> <td>Displays the logs of a container. Add <code class="language-plaintext highlighter-rouge">-f</code> to follow live logs.</td> </tr> <tr> <td><strong>Stop a container</strong></td> <td><code class="language-plaintext highlighter-rouge">docker stop &lt;container_id&gt;</code></td> <td>Gracefully stops a running container.</td> </tr> <tr> <td><strong>Start a stopped container</strong></td> <td><code class="language-plaintext highlighter-rouge">docker start &lt;container_id&gt;</code></td> <td>Restarts a stopped container.</td> </tr> </tbody> </table> <h3 id="notes">Notes:</h3> <ul> <li>Replace <code class="language-plaintext highlighter-rouge">&lt;image_name&gt;</code>, <code class="language-plaintext highlighter-rouge">&lt;container_id&gt;</code>, and paths with actual values.</li> <li>For port binding, ensure the host port is available (e.g., <code class="language-plaintext highlighter-rouge">-p 8080:80</code>).</li> <li>Use <code class="language-plaintext highlighter-rouge">docker --help</code> or <code class="language-plaintext highlighter-rouge">man docker</code> for detailed syntax.</li> </ul> <p>Example for port binding and volume mounting:</p> <div class="language-bash highlighter-rouge"><div class="highlight"><pre class="highlight"><code>docker run <span class="nt">-p</span> 8080:80 <span class="nt">-v</span> /home/user/data:/app/data nginx
</code></pre></div></div> <p>This runs an Nginx container with host port <code class="language-plaintext highlighter-rouge">8080</code> mapped to container port <code class="language-plaintext highlighter-rouge">80</code> and mounts <code class="language-plaintext highlighter-rouge">/home/user/data</code> to <code class="language-plaintext highlighter-rouge">/app/data</code>.</p>]]></content><author><name></name></author><category term="Docker"/><category term="DevOps"/><category term="Containerization"/><summary type="html"><![CDATA[Essential Docker commands for image and container manipulation.]]></summary></entry><entry><title type="html">WordPress Docker Setup</title><link href="https://chunde.github.io/blog/2025/WordPress-Docker-Setup-on-Ubuntu/" rel="alternate" type="text/html" title="WordPress Docker Setup"/><published>2025-07-04T13:05:10+00:00</published><updated>2025-07-04T13:05:10+00:00</updated><id>https://chunde.github.io/blog/2025/WordPress-Docker-Setup-on-Ubuntu</id><content type="html" xml:base="https://chunde.github.io/blog/2025/WordPress-Docker-Setup-on-Ubuntu/"><![CDATA[<h2 id="prerequisites">Prerequisites</h2> <ol> <li>Ubuntu system (20.04/22.04 recommended)</li> <li>Docker installed (if not, follow Step 1)</li> <li>Basic terminal familiarity</li> </ol> <h2 id="step-by-step-guide">Step-by-Step Guide</h2> <h3 id="1-install-docker">1. Install Docker</h3> <div class="language-bash highlighter-rouge"><div class="highlight"><pre class="highlight"><code><span class="nb">sudo </span>apt update
<span class="nb">sudo </span>apt <span class="nb">install </span>docker.io docker-compose
<span class="nb">sudo </span>systemctl <span class="nb">enable</span> <span class="nt">--now</span> docker
<span class="nb">sudo </span>usermod <span class="nt">-aG</span> docker <span class="k">${</span><span class="nv">USER</span><span class="k">}</span>  <span class="c"># Add current user to docker group</span>
newgrp docker  <span class="c"># Refresh group permissions</span>
</code></pre></div></div> <h3 id="2-create-docker-compose-file">2. Create Docker Compose File</h3> <p>Create <code class="language-plaintext highlighter-rouge">docker-compose.yml</code> with:</p> <div class="language-yaml highlighter-rouge"><div class="highlight"><pre class="highlight"><code><span class="na">version</span><span class="pi">:</span> <span class="s1">'</span><span class="s">3.8'</span>

<span class="na">services</span><span class="pi">:</span>
  <span class="na">db</span><span class="pi">:</span>
    <span class="na">image</span><span class="pi">:</span> <span class="s">mysql:5.7</span>
    <span class="na">volumes</span><span class="pi">:</span>
      <span class="pi">-</span> <span class="s">db_data:/var/lib/mysql</span>
    <span class="na">environment</span><span class="pi">:</span>
      <span class="na">MYSQL_ROOT_PASSWORD</span><span class="pi">:</span> <span class="s">your_root_password</span>
      <span class="na">MYSQL_DATABASE</span><span class="pi">:</span> <span class="s">wordpress</span>
      <span class="na">MYSQL_USER</span><span class="pi">:</span> <span class="s">wordpress</span>
      <span class="na">MYSQL_PASSWORD</span><span class="pi">:</span> <span class="s">wordpress</span>
    <span class="na">restart</span><span class="pi">:</span> <span class="s">unless-stopped</span>

  <span class="na">wordpress</span><span class="pi">:</span>
    <span class="na">depends_on</span><span class="pi">:</span>
      <span class="pi">-</span> <span class="s">db</span>
    <span class="na">image</span><span class="pi">:</span> <span class="s">wordpress:latest</span>
    <span class="na">ports</span><span class="pi">:</span>
      <span class="pi">-</span> <span class="s2">"</span><span class="s">8080:80"</span>  <span class="c1"># Binds host port 8080 to container port 80</span>
    <span class="na">volumes</span><span class="pi">:</span>
      <span class="pi">-</span> <span class="s">./wp-content:/var/www/html/wp-content</span>  <span class="c1"># Local folder binding</span>
    <span class="na">environment</span><span class="pi">:</span>
      <span class="na">WORDPRESS_DB_HOST</span><span class="pi">:</span> <span class="s">db:3306</span>
      <span class="na">WORDPRESS_DB_USER</span><span class="pi">:</span> <span class="s">wordpress</span>
      <span class="na">WORDPRESS_DB_PASSWORD</span><span class="pi">:</span> <span class="s">wordpress</span>
      <span class="na">WORDPRESS_DB_NAME</span><span class="pi">:</span> <span class="s">wordpress</span>
    <span class="na">restart</span><span class="pi">:</span> <span class="s">unless-stopped</span>

<span class="na">volumes</span><span class="pi">:</span>
  <span class="na">db_data</span><span class="pi">:</span>
</code></pre></div></div> <h3 id="3-key-configuration-details">3. Key Configuration Details</h3> <p><strong>Port Binding</strong>:</p> <ul> <li><code class="language-plaintext highlighter-rouge">ports: - "8080:80"</code> maps: <ul> <li>Host machine port: 8080 (accessible via <code class="language-plaintext highlighter-rouge">http://localhost:8080</code>)</li> <li>Container port: 80 (WordPress default port)</li> </ul> </li> </ul> <p><strong>Volume Binding</strong>:</p> <ul> <li><code class="language-plaintext highlighter-rouge">volumes: - ./wp-content:/var/www/html/wp-content</code> creates: <ul> <li>Local folder: <code class="language-plaintext highlighter-rouge">./wp-content</code> (relative to compose file)</li> <li>Container path: WordPress content directory</li> <li>Changes persist after container restarts</li> </ul> </li> </ul> <h3 id="4-launch-the-stack">4. Launch the Stack</h3> <div class="language-bash highlighter-rouge"><div class="highlight"><pre class="highlight"><code>docker-compose up <span class="nt">-d</span>
</code></pre></div></div> <h3 id="5-verification">5. Verification</h3> <ol> <li>Check running containers: <div class="language-bash highlighter-rouge"><div class="highlight"><pre class="highlight"><code>docker ps
</code></pre></div> </div> </li> <li>Access WordPress at <code class="language-plaintext highlighter-rouge">http://localhost:8080</code></li> <li>Check local filesystem for created <code class="language-plaintext highlighter-rouge">wp-content</code> folder</li> </ol> <h3 id="6-management-commands">6. Management Commands</h3> <ul> <li>Stop containers: <code class="language-plaintext highlighter-rouge">docker-compose down</code></li> <li>View logs: <code class="language-plaintext highlighter-rouge">docker-compose logs -f</code></li> <li>Update images: <code class="language-plaintext highlighter-rouge">docker-compose pull &amp;&amp; docker-compose up -d</code></li> </ul> <h2 id="troubleshooting">Troubleshooting</h2> <ol> <li>Port conflicts: Change left-side port in <code class="language-plaintext highlighter-rouge">ports</code> mapping (e.g., <code class="language-plaintext highlighter-rouge">8081:80</code>)</li> <li>Permission issues: <div class="language-bash highlighter-rouge"><div class="highlight"><pre class="highlight"><code><span class="nb">sudo chown</span> <span class="nt">-R</span> <span class="nv">$USER</span>:<span class="nv">$USER</span> ./wp-content
</code></pre></div> </div> </li> <li>Database errors: Verify credentials match in both service definitions</li> </ol>]]></content><author><name></name></author><category term="Docker"/><category term="WordPress"/><category term="Ubuntu"/><category term="Web-Development"/><summary type="html"><![CDATA[Guide for deploying WordPress with Docker on Ubuntu including port binding and volume mounting]]></summary></entry><entry><title type="html">Proximal Policy Optimization VS Q-learning</title><link href="https://chunde.github.io/blog/2025/PPO-VS-DQN/" rel="alternate" type="text/html" title="Proximal Policy Optimization VS Q-learning"/><published>2025-07-04T10:13:08+00:00</published><updated>2025-07-04T10:13:08+00:00</updated><id>https://chunde.github.io/blog/2025/PPO-VS-DQN</id><content type="html" xml:base="https://chunde.github.io/blog/2025/PPO-VS-DQN/"><![CDATA[<p>Proximal Policy Optimization (PPO) and Q-learning are both reinforcement learning (RL) algorithms, but they belong to different families and have distinct approaches to solving RL problems. Here‚Äôs a detailed comparison:</p> <hr/> <h3 id="1-core-approach"><strong>1. Core Approach</strong></h3> <ul> <li><strong>PPO (Policy Optimization - Actor-Critic Method)</strong>: <ul> <li>Learns a <strong>policy directly</strong> (a mapping from states to actions).</li> <li>Uses an <strong>actor-critic architecture</strong>: The actor improves the policy, while the critic evaluates the policy by estimating value functions (e.g., state-value or advantage).</li> <li>Optimizes the policy <strong>proximally</strong> (with a clipped objective) to avoid large, destabilizing updates.</li> </ul> </li> <li><strong>Q-learning (Value-Based Method)</strong>: <ul> <li>Learns a <strong>value function (Q-function)</strong>, which estimates the expected return for taking an action in a state and following the optimal policy thereafter.</li> <li>Uses <strong>temporal difference (TD) learning</strong> to update Q-values.</li> <li>Typically employs an <strong>Œµ-greedy policy</strong> for exploration (not part of the learned function).</li> </ul> </li> </ul> <hr/> <h3 id="2-policy-vs-value-learning"><strong>2. Policy vs. Value Learning</strong></h3> <ul> <li><strong>PPO</strong>: <ul> <li>Outputs a <strong>stochastic policy</strong> (probability distribution over actions).</li> <li>Can handle <strong>continuous action spaces</strong> naturally.</li> <li>On-policy: Requires fresh samples from the current policy for training.</li> </ul> </li> <li><strong>Q-learning</strong>: <ul> <li>Outputs a <strong>Q-table or Q-function</strong>, and the policy is derived by taking the action with the highest Q-value (argmax).</li> <li>Struggles with <strong>continuous actions</strong> (unless combined with techniques like DDPG).</li> <li>Off-policy: Can reuse past experiences (replay buffer).</li> </ul> </li> </ul> <hr/> <h3 id="3-exploration"><strong>3. Exploration</strong></h3> <ul> <li><strong>PPO</strong>: <ul> <li>Explores via the <strong>stochasticity of the policy</strong> (e.g., Gaussian noise for continuous actions).</li> <li>Does not require explicit exploration mechanisms like Œµ-greedy.</li> </ul> </li> <li><strong>Q-learning</strong>: <ul> <li>Relies on <strong>Œµ-greedy or Boltzmann exploration</strong> to try non-optimal actions.</li> <li>Without proper exploration, it can get stuck in suboptimal policies.</li> </ul> </li> </ul> <hr/> <h3 id="4-stability--sample-efficiency"><strong>4. Stability &amp; Sample Efficiency</strong></h3> <ul> <li><strong>PPO</strong>: <ul> <li>More stable due to <strong>clipped objective</strong> and trust-region updates.</li> <li>Less sample-efficient (requires on-policy data, though better than vanilla policy gradients).</li> </ul> </li> <li><strong>Q-learning</strong>: <ul> <li>Can be unstable due to <strong>bootstrapping</strong> and moving targets (mitigated by target networks in Deep Q-Networks, DQN).</li> <li>More sample-efficient (can reuse old data via replay buffers).</li> </ul> </li> </ul> <hr/> <h3 id="5-key-strengths"><strong>5. Key Strengths</strong></h3> <table> <thead> <tr> <th><strong>PPO</strong></th> <th><strong>Q-learning</strong></th> </tr> </thead> <tbody> <tr> <td>Works well for <strong>continuous action spaces</strong> (e.g., robotics).</td> <td>Simpler, works well for <strong>discrete actions</strong> (e.g., Atari games).</td> </tr> <tr> <td>Stable, less hyperparameter-sensitive.</td> <td>Highly sample-efficient with replay buffers.</td> </tr> <tr> <td>On-policy: Good for <strong>online learning</strong>.</td> <td>Off-policy: Can learn from <strong>old or expert data</strong>.</td> </tr> </tbody> </table> <hr/> <h3 id="6-when-to-use-which"><strong>6. When to Use Which?</strong></h3> <ul> <li>Use <strong>PPO</strong> when: <ul> <li>The action space is <strong>continuous</strong> or high-dimensional.</li> <li>You need <strong>stable, monotonic policy improvement</strong> (e.g., robotics, simulation control).</li> <li>On-policy learning is acceptable (though PPO is more sample-efficient than vanilla policy gradients).</li> </ul> </li> <li>Use <strong>Q-learning (or DQN)</strong> when: <ul> <li>Actions are <strong>discrete and low-dimensional</strong> (e.g., games, navigation).</li> <li>You want to leverage <strong>off-policy learning and replay buffers</strong>.</li> <li>You prefer simplicity and don‚Äôt need a stochastic policy.</li> </ul> </li> </ul> <hr/> <h3 id="7-extensions--hybrids"><strong>7. Extensions &amp; Hybrids</strong></h3> <ul> <li><strong>PPO</strong> variants: TRPO (predecessor), SAC (soft actor-critic, combines policy gradients and Q-learning).</li> <li><strong>Q-learning</strong> variants: DQN (deep Q-learning), Double DQN, Rainbow (combines multiple improvements).</li> <li><strong>Hybrids</strong>: Actor-Critic methods like DDPG (Q-learning + policy gradients) for continuous control.</li> </ul> <hr/> <h3 id="summary-table"><strong>Summary Table</strong></h3> <table> <thead> <tr> <th>Feature</th> <th>PPO</th> <th>Q-learning</th> </tr> </thead> <tbody> <tr> <td><strong>Type</strong></td> <td>Policy Gradient (Actor-Critic)</td> <td>Value-Based</td> </tr> <tr> <td><strong>Action Space</strong></td> <td>Continuous/Discrete</td> <td>Discrete (or hybrid via DDPG)</td> </tr> <tr> <td><strong>Policy</strong></td> <td>Stochastic (learned)</td> <td>Greedy (derived from Q)</td> </tr> <tr> <td><strong>Exploration</strong></td> <td>Policy stochasticity</td> <td>Œµ-greedy/Boltzmann</td> </tr> <tr> <td><strong>Sample Efficiency</strong></td> <td>Moderate (on-policy)</td> <td>High (off-policy)</td> </tr> <tr> <td><strong>Stability</strong></td> <td>High (clipped updates)</td> <td>Medium (requires tricks)</td> </tr> </tbody> </table> <p>Both algorithms are powerful but suited to different scenarios. PPO is often preferred for complex, continuous control tasks, while Q-learning (and its variants like DQN) excels in discrete, high-sample-efficiency settings.</p>]]></content><author><name></name></author><category term="AI"/><category term="NLP"/><category term="Algorithm"/><category term="RL"/><summary type="html"><![CDATA[Proximal Policy Optimization (PPO) and Q-learning are both reinforcement learning (RL) algorithms, but they belong to different families and have distinct approaches to solving RL problems. Here‚Äôs a detailed comparison:]]></summary></entry><entry><title type="html">Su-Schrieffer-Heeger (SSH) model</title><link href="https://chunde.github.io/blog/2025/SSH-Model/" rel="alternate" type="text/html" title="Su-Schrieffer-Heeger (SSH) model"/><published>2025-03-11T07:16:27+00:00</published><updated>2025-03-11T07:16:27+00:00</updated><id>https://chunde.github.io/blog/2025/SSH-Model</id><content type="html" xml:base="https://chunde.github.io/blog/2025/SSH-Model/"><![CDATA[<p>Let‚Äôs derive the edge states for a simple model: the <strong>Su-Schrieffer-Heeger (SSH) model</strong>. The SSH model is a one-dimensional lattice model that exhibits topological properties and edge states. It‚Äôs a great starting point to understand how edge states emerge in topological systems.</p> <hr/> <h3 id="1-the-ssh-model"><strong>1. The SSH Model</strong></h3> <p>The SSH model describes electrons hopping on a 1D chain with alternating hopping amplitudes \(t_1\) and \(t_2\). The Hamiltonian is:</p> \[H = \sum_{i} \left( t_1 c_{A,i}^\dagger c_{B,i} + t_2 c_{B,i}^\dagger c_{A,i+1} + \text{h.c.} \right),\] <p>where:</p> <ul> <li>\(c_{A,i}^\dagger\) and \(c_{B,i}^\dagger\) create electrons on sublattices \(A\) and \(B\) at site \(i\),</li> <li>\(t_1\) and \(t_2\) are the intra-cell and inter-cell hopping amplitudes, respectively.</li> </ul> <hr/> <h3 id="2-bulk-hamiltonian-in-momentum-space"><strong>2. Bulk Hamiltonian in Momentum Space</strong></h3> <p>To study the bulk properties, we Fourier transform the Hamiltonian into momentum space. Define the Fourier transforms:</p> \[c_{A,i} = \frac{1}{\sqrt{N}} \sum_k e^{ik \cdot i} c_{A,k}, \quad c_{B,i} = \frac{1}{\sqrt{N}} \sum_k e^{ik \cdot i} c_{B,k},\] <p>where \(N\) is the number of unit cells, and \(k\) is the crystal momentum. The Hamiltonian becomes:</p> \[H = \sum_k \begin{pmatrix} c_{A,k}^\dagger &amp; c_{B,k}^\dagger \end{pmatrix} H(k) \begin{pmatrix} c_{A,k} \\ c_{B,k} \end{pmatrix},\] <p>where the bulk Hamiltonian \(H(k)\) is:</p> \[H(k) = \begin{pmatrix} 0 &amp; t_1 + t_2 e^{-ik} \\ t_1 + t_2 e^{ik} &amp; 0 \end{pmatrix}.\] <p>This can be written as:</p> \[H(k) = \vec{d}(k) \cdot \vec{\sigma},\] <p>where \(\vec{\sigma} = (\sigma_x, \sigma_y, \sigma_z)\) are the Pauli matrices, and:</p> \[\vec{d}(k) = (t_1 + t_2 \cos k, \, t_2 \sin k, \, 0).\] <hr/> <h3 id="3-topological-invariant"><strong>3. Topological Invariant</strong></h3> <p>The SSH model is characterized by a topological invariant called the <strong>winding number</strong> \(W\), which is defined as:</p> \[W = \frac{1}{2\pi} \int_{-\pi}^{\pi} dk \, \frac{d\phi(k)}{dk},\] <p>where \(\phi(k) = \arg(d_x(k) + i d_y(k))\). For the SSH model: If \(|t_1| &lt; |t_2|\), \(W = 1\) (topologically non-trivial). If \(|t_1| &gt; |t_2|\), \(W = 0\) (topologically trivial).</p> <hr/> <h3 id="4-edge-states-in-the-topological-phase"><strong>4. Edge States in the Topological Phase</strong></h3> <p>When \(|t_1| &lt; |t_2|\), the system is in the topological phase, and edge states appear at the boundaries of a finite chain. Let‚Äôs derive these edge states.</p> <h4 id="finite-chain-with-open-boundary-conditions"><strong>Finite Chain with Open Boundary Conditions</strong></h4> <p>Consider a finite chain with \(N\) unit cells and open boundary conditions. The Hamiltonian is:</p> \[H = \sum_{i=1}^{N-1} \left( t_1 c_{A,i}^\dagger c_{B,i} + t_2 c_{B,i}^\dagger c_{A,i+1} + \text{h.c.} \right).\] <p>We look for zero-energy eigenstates</p> \[|\psi \rangle = \sum_i (\psi_{A,i} c_{A,i}^\dagger + \psi_{B,i} c_{B,i}^\dagger) |0\rangle\] <p>that satisfy</p> \[H|\psi \rangle = 0\] <h4 id="recursion-relations"><strong>Recursion Relations</strong></h4> <p>From the Schr√∂dinger equation \(H|\psi \rangle = 0\), we get the recursion relations: \(t_1 \psi_{B,i} + t_2 \psi_{B,i-1} = 0, \quad t_1 \psi_{A,i} + t_2 \psi_{A,i+1} = 0.\)</p> <p>Assume an exponential ansatz for the wavefunctions:</p> \[\psi_{A,i} = \alpha^i, \quad \psi_{B,i} = \beta^i.\] <p>Substituting into the recursion relations, we get:</p> \[t_1 \beta^i + t_2 \beta^{i-1} = 0 \implies t_1 \beta + t_2 = 0 \implies \beta = -\frac{t_2}{t_1},\] \[t_1 \alpha^i + t_2 \alpha^{i+1} = 0 \implies t_1 + t_2 \alpha = 0 \implies \alpha = -\frac{t_1}{t_2}.\] <h4 id="localization-of-edge-states"><strong>Localization of Edge States</strong></h4> <p>For \(|t_1| &lt; |t_2|\), \(|\alpha| &lt; 1\) and \(|\beta| &gt; 1\). This means: \(\psi_{A,i}\) decays exponentially from the left edge (\(i = 1\)). \(\psi_{B,i}\) decays exponentially from the right edge (\(i = N\)).</p> <p>Thus, the edge states are localized at the ends of the chain.</p> <hr/> <h3 id="5-summary"><strong>5. Summary</strong></h3> <p>The SSH model exhibits edge states in the topological phase \(|t_1| &lt; |t_2|\).</p> <ul> <li>These edge states are zero-energy modes localized at the ends of the chain.</li> <li>The existence of edge states is protected by the topological invariant (winding number).</li> </ul> <p>This derivation illustrates how edge states emerge in a simple topological system. Similar principles apply to more complex models like 2D topological insulators and quantum Hall systems.</p>]]></content><author><name></name></author><category term="Quantum"/><category term="Simulation"/><category term="Physics"/><summary type="html"><![CDATA[A derivation of edge stae in SSH model]]></summary></entry></feed>