<?xml version="1.0" encoding="utf-8"?><feed xmlns="http://www.w3.org/2005/Atom" xml:lang="en"><generator uri="https://jekyllrb.com/" version="4.3.4">Jekyll</generator><link href="https://chunde.github.io/feed.xml" rel="self" type="application/atom+xml"/><link href="https://chunde.github.io/" rel="alternate" type="text/html" hreflang="en"/><updated>2025-07-08T07:47:04+00:00</updated><id>https://chunde.github.io/feed.xml</id><title type="html">i‚Ñè‚àÆdÕ©ùõë‚Ä¢üíï</title><subtitle>Chunde&apos;s Personal Pages. </subtitle><entry><title type="html">Gapped 1D Systems and Area Law</title><link href="https://chunde.github.io/blog/2025/Gapped-1D-Systems-and-Area-Law/" rel="alternate" type="text/html" title="Gapped 1D Systems and Area Law"/><published>2025-07-07T23:45:49+00:00</published><updated>2025-07-07T23:45:49+00:00</updated><id>https://chunde.github.io/blog/2025/Gapped-1D-Systems-and-Area-Law</id><content type="html" xml:base="https://chunde.github.io/blog/2025/Gapped-1D-Systems-and-Area-Law/"><![CDATA[<h3 id="1-why-gapped-1d-systems-have-low-entanglement"><strong>1. Why Gapped 1D Systems Have Low Entanglement</strong></h3> <p>Gapped 1D quantum systems (e.g., spin chains) typically exhibit <strong>low entanglement</strong> because their ground states avoid long-range quantum correlations. A discrete example is the <strong>Majumdar-Ghosh spin chain</strong>:</p> <ul> <li>Consider a 1D spin-1/2 chain with Hamiltonian:<br/> \(H = \sum_i \left( \vec{S}_i \cdot \vec{S}_{i+1} + \frac{1}{2} \vec{S}_i \cdot \vec{S}_{i+2} \right)\)</li> <li>The ground state is a <strong>dimerized product state</strong> (e.g., spins form singlets on alternating bonds):<br/> \(|\psi\rangle = (|01\rangle - |10\rangle) \otimes (|01\rangle - |10\rangle) \otimes \dots\)</li> <li>The entanglement entropy of any bipartition is <strong>zero</strong> (no entanglement across cuts) because the state is a product of local singlets.</li> </ul> <p>Gapped systems generally satisfy the <strong>area law</strong>, meaning entanglement entropy scales with the boundary size (here, a constant in 1D).</p> <hr/> <h3 id="2-area-law-explained-with-a-simple-example"><strong>2. Area Law Explained with a Simple Example</strong></h3> <p>The <strong>area law</strong> states that the entanglement entropy \(S_A\) of a subsystem \(A\) scales with its boundary size (not volume).</p> <h4 id="example-1d-spin-chain-with-nearest-neighbor-coupling"><strong>Example: 1D Spin Chain with Nearest-Neighbor Coupling</strong></h4> <ul> <li>Hamiltonian: \(H = -J \sum_i \sigma_i^z \sigma_{i+1}^z\) (Ising model in its gapped phase).</li> <li> <table> <tbody> <tr> <td>Ground state (for \(J &gt; 0\)): $$</td> <td>\psi\rangle =</td> <td>\uparrow \uparrow \dots \uparrow\rangle\(or\)</td> <td>\downarrow \downarrow \dots \downarrow\rangle$$.</td> </tr> </tbody> </table> </li> <li>Bipartition the chain into \(A\) (first \(L\) spins) and \(B\) (rest).</li> <li> <table> <tbody> <tr> <td>Reduced density matrix \(\rho_A\) is pure (e.g., $$\rho_A =</td> <td>\uparrow \dots \uparrow\rangle \langle \uparrow \dots \uparrow</td> <td>\(), so\)S_A = 0$$.</td> </tr> </tbody> </table> </li> </ul> <p>For slightly entangled states (e.g., perturbed ground states), \(S_A\) remains <strong>constant</strong> (independent of \(L\)), obeying the area law. In higher dimensions, \(S_A \sim \text{boundary area of } A\).</p> <h4 id="violations-of-area-law"><strong>Violations of Area Law</strong></h4> <ul> <li>Critical (gapless) systems in 1D: \(S_A \sim \log L\) (logarithmic divergence).</li> <li>Highly excited states: Volume-law scaling (\(S_A \sim L\)).</li> </ul> <p>The area law is a hallmark of <strong>low-complexity quantum states</strong>, relevant for efficient numerical simulations (e.g., DMRG, tensor networks).</p>]]></content><author><name></name></author><category term="Quantum"/><category term="Physics,"/><category term="Entanglement,"/><category term="Area"/><category term="Law,"/><category term="Condensed"/><category term="Matter"/><summary type="html"><![CDATA[Explanation of low entanglement in gapped 1D systems and the area law with discrete examples.]]></summary></entry><entry><title type="html">MySQL Management Commands</title><link href="https://chunde.github.io/blog/2025/MySQL-Common-Commands/" rel="alternate" type="text/html" title="MySQL Management Commands"/><published>2025-07-05T21:30:46+00:00</published><updated>2025-07-05T21:30:46+00:00</updated><id>https://chunde.github.io/blog/2025/MySQL-Common-Commands</id><content type="html" xml:base="https://chunde.github.io/blog/2025/MySQL-Common-Commands/"><![CDATA[<table> <thead> <tr> <th>Command</th> <th>Explanation</th> </tr> </thead> <tbody> <tr> <td><code class="language-plaintext highlighter-rouge">mysql -u [username] -p</code></td> <td>Connects to MySQL server with username/prompt for password</td> </tr> <tr> <td><code class="language-plaintext highlighter-rouge">SHOW DATABASES;</code></td> <td>Lists all databases on the server</td> </tr> <tr> <td><code class="language-plaintext highlighter-rouge">USE [database_name];</code></td> <td>Selects a database for operations</td> </tr> <tr> <td><code class="language-plaintext highlighter-rouge">SHOW TABLES;</code></td> <td>Displays all tables in the current database</td> </tr> <tr> <td><code class="language-plaintext highlighter-rouge">DESCRIBE [table_name];</code></td> <td>Shows the structure of a table (columns, types, etc.)</td> </tr> <tr> <td><code class="language-plaintext highlighter-rouge">CREATE DATABASE [db_name];</code></td> <td>Creates a new database</td> </tr> <tr> <td><code class="language-plaintext highlighter-rouge">DROP DATABASE [db_name];</code></td> <td>Permanently deletes a database</td> </tr> <tr> <td><code class="language-plaintext highlighter-rouge">CREATE TABLE [table_name] (...);</code></td> <td>Creates a new table with specified columns</td> </tr> <tr> <td><code class="language-plaintext highlighter-rouge">ALTER TABLE [table_name] ADD [column] [type];</code></td> <td>Adds a column to an existing table</td> </tr> <tr> <td><code class="language-plaintext highlighter-rouge">GRANT ALL ON [db_name].* TO '[user]'@'[host]';</code></td> <td>Grants full privileges to a user on a database</td> </tr> <tr> <td><code class="language-plaintext highlighter-rouge">FLUSH PRIVILEGES;</code></td> <td>Reloads privilege tables after permission changes</td> </tr> <tr> <td><code class="language-plaintext highlighter-rouge">SHOW PROCESSLIST;</code></td> <td>Displays active server threads/queries</td> </tr> <tr> <td><code class="language-plaintext highlighter-rouge">KILL [process_id];</code></td> <td>Terminates a running MySQL process</td> </tr> <tr> <td><code class="language-plaintext highlighter-rouge">mysqldump -u [user] -p [db_name] &gt; backup.sql</code></td> <td>Creates a database backup file</td> </tr> <tr> <td><code class="language-plaintext highlighter-rouge">SOURCE backup.sql;</code></td> <td>Restores database from backup file</td> </tr> <tr> <td><code class="language-plaintext highlighter-rouge">SELECT User, Host FROM mysql.user;</code></td> <td>Lists all MySQL user accounts</td> </tr> </tbody> </table> <p><strong>Key Notes:</strong></p> <ol> <li>Most commands require semicolon <code class="language-plaintext highlighter-rouge">;</code> termination</li> <li>Administrative commands often require root/administrative privileges</li> <li>Backup/restore operations are typically run from system shell (not MySQL prompt)</li> </ol> <p>For user management, common commands include:</p> <ul> <li><code class="language-plaintext highlighter-rouge">CREATE USER</code></li> <li><code class="language-plaintext highlighter-rouge">DROP USER</code></li> <li><code class="language-plaintext highlighter-rouge">SET PASSWORD</code></li> <li><code class="language-plaintext highlighter-rouge">RENAME USER</code></li> </ul> <p>For performance monitoring:</p> <ul> <li><code class="language-plaintext highlighter-rouge">SHOW STATUS</code></li> <li><code class="language-plaintext highlighter-rouge">SHOW VARIABLES</code></li> <li><code class="language-plaintext highlighter-rouge">EXPLAIN [query]</code></li> </ul> <p>Remember to always backup databases before major operations like <code class="language-plaintext highlighter-rouge">DROP</code> or structural changes.</p>]]></content><author><name></name></author><category term="MySQL"/><category term="Database"/><category term="SQL"/><category term="Administration"/><summary type="html"><![CDATA[A reference table of essential MySQL administration commands with explanations]]></summary></entry><entry><title type="html">WAMP vs XAMPP Comparison</title><link href="https://chunde.github.io/blog/2025/WAMP-vs-XAMPP-for-WordPress-Development/" rel="alternate" type="text/html" title="WAMP vs XAMPP Comparison"/><published>2025-07-05T12:57:40+00:00</published><updated>2025-07-05T12:57:40+00:00</updated><id>https://chunde.github.io/blog/2025/WAMP-vs-XAMPP-for-WordPress-Development</id><content type="html" xml:base="https://chunde.github.io/blog/2025/WAMP-vs-XAMPP-for-WordPress-Development/"><![CDATA[<h3 id="comparison-wamp-vs-xampp"><strong>Comparison: WAMP vs XAMPP</strong></h3> <table> <thead> <tr> <th>Feature</th> <th>WAMP</th> <th>XAMPP</th> </tr> </thead> <tbody> <tr> <td><strong>OS Support</strong></td> <td>Windows only</td> <td>Cross-platform (Win/macOS/Linux)</td> </tr> <tr> <td><strong>Components</strong></td> <td>Apache, MySQL, PHP</td> <td>Apache, MariaDB, PHP, Perl</td> </tr> <tr> <td><strong>Control Panel</strong></td> <td>System tray icon</td> <td>Dedicated control panel</td> </tr> <tr> <td><strong>Configuration</strong></td> <td>More Windows-friendly</td> <td>Slightly more complex</td> </tr> <tr> <td><strong>Portability</strong></td> <td>Less portable</td> <td>More portable (can run from USB)</td> </tr> <tr> <td><strong>Multiple PHP Versions</strong></td> <td>Supported via add-ons</td> <td>Limited without manual config</td> </tr> <tr> <td><strong>Default Ports</strong></td> <td>Apache: 80, MySQL: 3306</td> <td>Same</td> </tr> </tbody> </table> <h3 id="detailed-setup-instructions"><strong>Detailed Setup Instructions</strong></h3> <h4 id="option-1-wamp-setup"><strong>Option 1: WAMP Setup</strong></h4> <ol> <li><strong>Download</strong>: Get WAMP Server from <a href="https://www.wampserver.com">wampserver.com</a></li> <li><strong>Install</strong>: Run installer as Administrator, accept all defaults</li> <li><strong>Verify Installation</strong>: <ul> <li>Launch WAMP from Start Menu</li> <li>Wait for icon to turn green in system tray</li> <li>Visit <code class="language-plaintext highlighter-rouge">http://localhost</code> to see WAMP homepage</li> </ul> </li> <li><strong>WordPress Installation</strong>: <div class="language-bash highlighter-rouge"><div class="highlight"><pre class="highlight"><code><span class="nb">cd </span>C:<span class="se">\w</span>amp<span class="se">\w</span>ww<span class="se">\</span>
git clone https://github.com/WordPress/WordPress.git mywebsite
</code></pre></div> </div> </li> <li><strong>Create Database</strong>: <ul> <li>Open <code class="language-plaintext highlighter-rouge">http://localhost/phpmyadmin</code></li> <li>Create new database named <code class="language-plaintext highlighter-rouge">mywebsite_db</code></li> </ul> </li> </ol> <h4 id="option-2-xampp-setup"><strong>Option 2: XAMPP Setup</strong></h4> <ol> <li><strong>Download</strong>: Get XAMPP from <a href="https://www.apachefriends.org">apachefriends.org</a></li> <li><strong>Install</strong>: <ul> <li>Run installer (disable any running Skype/TeamViewer as they use port 80)</li> <li>Select components: Apache, MySQL, PHP, phpMyAdmin</li> </ul> </li> <li><strong>Launch Control Panel</strong>: <ul> <li>Start Apache and MySQL services</li> <li>Verify at <code class="language-plaintext highlighter-rouge">http://localhost</code></li> </ul> </li> <li><strong>WordPress Installation</strong>: <div class="language-bash highlighter-rouge"><div class="highlight"><pre class="highlight"><code><span class="nb">cd </span>C:<span class="se">\x</span>ampp<span class="se">\h</span>tdocs<span class="se">\</span>
git clone https://github.com/WordPress/WordPress.git site1
</code></pre></div> </div> </li> </ol> <h3 id="hosting-multiple-websites"><strong>Hosting Multiple Websites</strong></h3> <h4 id="method-for-both-wampxampp"><strong>Method for Both WAMP/XAMPP:</strong></h4> <ol> <li><strong>Create Virtual Hosts</strong>: <ul> <li>Edit <code class="language-plaintext highlighter-rouge">httpd-vhosts.conf</code> (WAMP: <code class="language-plaintext highlighter-rouge">C:\wamp\bin\apache\apacheX.X.X\conf\extra\</code>, XAMPP: similar path) ```apache</li> </ul> <p>&lt;VirtualHost *:80&gt; DocumentRoot ‚ÄúC:/wamp/www/site1‚Äù ServerName site1.test &lt;/VirtualHost&gt; &lt;VirtualHost *:80&gt; DocumentRoot ‚ÄúC:/wamp/www/site2‚Äù ServerName site2.test &lt;/VirtualHost&gt; ```</p> </li> <li><strong>Edit Hosts File</strong>: <ul> <li>Add to <code class="language-plaintext highlighter-rouge">C:\Windows\System32\drivers\etc\hosts</code>: <div class="language-plaintext highlighter-rouge"><div class="highlight"><pre class="highlight"><code>127.0.0.1 site1.test
127.0.0.1 site2.test
</code></pre></div> </div> </li> </ul> </li> <li><strong>Restart Services</strong> and access sites at <code class="language-plaintext highlighter-rouge">http://site1.test</code> and <code class="language-plaintext highlighter-rouge">http://site2.test</code></li> </ol> <h3 id="critical-configuration-notes"><strong>Critical Configuration Notes</strong></h3> <ol> <li>Always run installers as Administrator</li> <li>Configure Windows Firewall to allow Apache/MySQL</li> <li>For WordPress: set <code class="language-plaintext highlighter-rouge">define('WP_DEBUG', true);</code> in <code class="language-plaintext highlighter-rouge">wp-config.php</code> during development</li> <li>Recommended to use different ports if running multiple instances: <div class="language-apache highlighter-rouge"><div class="highlight"><pre class="highlight"><code><span class="nc">Listen</span> 8080
<span class="p">&lt;</span><span class="nl">VirtualHost</span><span class="sr"> *:8080</span><span class="p">&gt;
</span>    <span class="c"># config for second site</span>
<span class="p">&lt;/</span><span class="nl">VirtualHost</span><span class="p">&gt;
</span></code></pre></div> </div> </li> </ol> <p>For Docker enthusiasts, consider using <code class="language-plaintext highlighter-rouge">docker-compose</code> with WordPress official images for even better isolation between sites. Would you like me to provide those instructions as well?</p>]]></content><author><name></name></author><category term="Web-Server"/><category term="Localhost"/><category term="WordPress"/><category term="WAMP"/><category term="XAMPP"/><category term="Web-Development"/><summary type="html"><![CDATA[Detailed comparison and setup guide for WAMP and XAMPP solutions for WordPress development]]></summary></entry><entry><title type="html">Solar System Planets Data</title><link href="https://chunde.github.io/blog/2025/Solar-System-Planets-Summary/" rel="alternate" type="text/html" title="Solar System Planets Data"/><published>2025-07-04T21:10:02+00:00</published><updated>2025-07-04T21:10:02+00:00</updated><id>https://chunde.github.io/blog/2025/Solar-System-Planets-Summary</id><content type="html" xml:base="https://chunde.github.io/blog/2025/Solar-System-Planets-Summary/"><![CDATA[<p>Here‚Äôs a comprehensive table of solar system planets ordered by their distance from the Sun:</p> <table> <thead> <tr> <th>Planet</th> <th>Distance from Sun (AU)</th> <th>Diameter (km)</th> <th>Mass (Earth=1)</th> <th>Orbital Period (Earth days)</th> <th>Rotation Period (Earth days)</th> <th>Number of Moons</th> <th>Notable Features</th> </tr> </thead> <tbody> <tr> <td>Mercury</td> <td>0.39</td> <td>4,880</td> <td>0.055</td> <td>88</td> <td>58.6</td> <td>0</td> <td>Extreme temperature variations</td> </tr> <tr> <td>Venus</td> <td>0.72</td> <td>12,104</td> <td>0.815</td> <td>225</td> <td>243 (retrograde)</td> <td>0</td> <td>Thick CO‚ÇÇ atmosphere</td> </tr> <tr> <td>Earth</td> <td>1.00</td> <td>12,742</td> <td>1.000</td> <td>365.25</td> <td>1</td> <td>1</td> <td>Only known life-bearing planet</td> </tr> <tr> <td>Mars</td> <td>1.52</td> <td>6,779</td> <td>0.107</td> <td>687</td> <td>1.03</td> <td>2</td> <td>Largest volcano (Olympus Mons)</td> </tr> <tr> <td>Jupiter</td> <td>5.20</td> <td>139,822</td> <td>317.8</td> <td>4,333</td> <td>0.41</td> <td>95</td> <td>Largest planet, Great Red Spot</td> </tr> <tr> <td>Saturn</td> <td>9.58</td> <td>116,464</td> <td>95.2</td> <td>10,759</td> <td>0.45</td> <td>146</td> <td>Prominent ring system</td> </tr> <tr> <td>Uranus</td> <td>19.22</td> <td>50,724</td> <td>14.5</td> <td>30,687</td> <td>0.72 (retrograde)</td> <td>28</td> <td>Extreme axial tilt (98¬∞)</td> </tr> <tr> <td>Neptune</td> <td>30.05</td> <td>49,244</td> <td>17.1</td> <td>60,190</td> <td>0.67</td> <td>16</td> <td>Strongest winds in solar system</td> </tr> </tbody> </table> <p>Key notes:</p> <ol> <li>AU (Astronomical Unit) = average Earth-Sun distance ‚âà 149.6 million km</li> <li>Moon counts are as of 2025 (particularly variable for gas giants as new moons are discovered)</li> <li>Rotation periods are sidereal (relative to stars)</li> <li>Dwarf planets (Pluto, Ceres, etc.) are not included in this table</li> </ol> <p>The table shows how planetary characteristics change with distance from the Sun, from the small, rocky inner planets to the massive gas giants of the outer solar system.</p>]]></content><author><name></name></author><category term="science"/><category term="astronomy"/><category term="planets"/><category term="solar-system"/><category term="space"/><summary type="html"><![CDATA[Comparative table of planets in our solar system sorted by distance from the Sun]]></summary></entry><entry><title type="html">Docker Command Cheatsheet</title><link href="https://chunde.github.io/blog/2025/Docker-Image-and-Container-Commands/" rel="alternate" type="text/html" title="Docker Command Cheatsheet"/><published>2025-07-04T20:45:17+00:00</published><updated>2025-07-04T20:45:17+00:00</updated><id>https://chunde.github.io/blog/2025/Docker-Image-and-Container-Commands</id><content type="html" xml:base="https://chunde.github.io/blog/2025/Docker-Image-and-Container-Commands/"><![CDATA[<h3 id="common-docker-commands">Common Docker Commands</h3> <table> <thead> <tr> <th><strong>Operation</strong></th> <th><strong>Command</strong></th> <th><strong>Explanation</strong></th> </tr> </thead> <tbody> <tr> <td><strong>Run a container</strong></td> <td><code class="language-plaintext highlighter-rouge">docker run -it &lt;image_name&gt;</code></td> <td>Starts a container interactively (<code class="language-plaintext highlighter-rouge">-i</code> keeps STDIN open, <code class="language-plaintext highlighter-rouge">-t</code> allocates a pseudo-TTY).</td> </tr> <tr> <td><strong>SSH into a container</strong></td> <td><code class="language-plaintext highlighter-rouge">docker exec -it &lt;container_id&gt; /bin/bash</code></td> <td>Executes an interactive bash shell inside a running container.</td> </tr> <tr> <td><strong>Bind local folder</strong></td> <td><code class="language-plaintext highlighter-rouge">docker run -v /host/path:/container/path &lt;image_name&gt;</code></td> <td>Mounts a host directory (<code class="language-plaintext highlighter-rouge">/host/path</code>) into the container (<code class="language-plaintext highlighter-rouge">/container/path</code>).</td> </tr> <tr> <td><strong>Change port binding</strong></td> <td><code class="language-plaintext highlighter-rouge">docker run -p &lt;host_port&gt;:&lt;container_port&gt; &lt;image_name&gt;</code></td> <td>Maps the host‚Äôs port (e.g., <code class="language-plaintext highlighter-rouge">8080</code>) to the container‚Äôs port (e.g., <code class="language-plaintext highlighter-rouge">80</code>).</td> </tr> <tr> <td><strong>List running containers</strong></td> <td><code class="language-plaintext highlighter-rouge">docker ps</code></td> <td>Shows all active containers. Add <code class="language-plaintext highlighter-rouge">-a</code> to include stopped containers.</td> </tr> <tr> <td><strong>Remove a container</strong></td> <td><code class="language-plaintext highlighter-rouge">docker rm &lt;container_id&gt;</code></td> <td>Deletes a stopped container. Use <code class="language-plaintext highlighter-rouge">-f</code> to force removal of a running container.</td> </tr> <tr> <td><strong>List images</strong></td> <td><code class="language-plaintext highlighter-rouge">docker images</code></td> <td>Displays all locally stored Docker images.</td> </tr> <tr> <td><strong>Remove an image</strong></td> <td><code class="language-plaintext highlighter-rouge">docker rmi &lt;image_id&gt;</code></td> <td>Deletes a Docker image. Use <code class="language-plaintext highlighter-rouge">-f</code> to force removal.</td> </tr> <tr> <td><strong>Build an image</strong></td> <td><code class="language-plaintext highlighter-rouge">docker build -t &lt;tag_name&gt; &lt;path_to_Dockerfile&gt;</code></td> <td>Builds an image from a <code class="language-plaintext highlighter-rouge">Dockerfile</code> in the specified directory.</td> </tr> <tr> <td><strong>Copy files to container</strong></td> <td><code class="language-plaintext highlighter-rouge">docker cp /host/file &lt;container_id&gt;:/container/path</code></td> <td>Copies a file from the host to a running container.</td> </tr> <tr> <td><strong>View logs</strong></td> <td><code class="language-plaintext highlighter-rouge">docker logs &lt;container_id&gt;</code></td> <td>Displays the logs of a container. Add <code class="language-plaintext highlighter-rouge">-f</code> to follow live logs.</td> </tr> <tr> <td><strong>Stop a container</strong></td> <td><code class="language-plaintext highlighter-rouge">docker stop &lt;container_id&gt;</code></td> <td>Gracefully stops a running container.</td> </tr> <tr> <td><strong>Start a stopped container</strong></td> <td><code class="language-plaintext highlighter-rouge">docker start &lt;container_id&gt;</code></td> <td>Restarts a stopped container.</td> </tr> </tbody> </table> <h3 id="notes">Notes:</h3> <ul> <li>Replace <code class="language-plaintext highlighter-rouge">&lt;image_name&gt;</code>, <code class="language-plaintext highlighter-rouge">&lt;container_id&gt;</code>, and paths with actual values.</li> <li>For port binding, ensure the host port is available (e.g., <code class="language-plaintext highlighter-rouge">-p 8080:80</code>).</li> <li>Use <code class="language-plaintext highlighter-rouge">docker --help</code> or <code class="language-plaintext highlighter-rouge">man docker</code> for detailed syntax.</li> </ul> <p>Example for port binding and volume mounting:</p> <div class="language-bash highlighter-rouge"><div class="highlight"><pre class="highlight"><code>docker run <span class="nt">-p</span> 8080:80 <span class="nt">-v</span> /home/user/data:/app/data nginx
</code></pre></div></div> <p>This runs an Nginx container with host port <code class="language-plaintext highlighter-rouge">8080</code> mapped to container port <code class="language-plaintext highlighter-rouge">80</code> and mounts <code class="language-plaintext highlighter-rouge">/home/user/data</code> to <code class="language-plaintext highlighter-rouge">/app/data</code>.</p>]]></content><author><name></name></author><category term="Docker"/><category term="DevOps"/><category term="Containerization"/><summary type="html"><![CDATA[Essential Docker commands for image and container manipulation.]]></summary></entry><entry><title type="html">WordPress Docker Setup</title><link href="https://chunde.github.io/blog/2025/WordPress-Docker-Setup-on-Ubuntu/" rel="alternate" type="text/html" title="WordPress Docker Setup"/><published>2025-07-04T13:05:10+00:00</published><updated>2025-07-04T13:05:10+00:00</updated><id>https://chunde.github.io/blog/2025/WordPress-Docker-Setup-on-Ubuntu</id><content type="html" xml:base="https://chunde.github.io/blog/2025/WordPress-Docker-Setup-on-Ubuntu/"><![CDATA[<h2 id="prerequisites">Prerequisites</h2> <ol> <li>Ubuntu system (20.04/22.04 recommended)</li> <li>Docker installed (if not, follow Step 1)</li> <li>Basic terminal familiarity</li> </ol> <h2 id="step-by-step-guide">Step-by-Step Guide</h2> <h3 id="1-install-docker">1. Install Docker</h3> <div class="language-bash highlighter-rouge"><div class="highlight"><pre class="highlight"><code><span class="nb">sudo </span>apt update
<span class="nb">sudo </span>apt <span class="nb">install </span>docker.io docker-compose
<span class="nb">sudo </span>systemctl <span class="nb">enable</span> <span class="nt">--now</span> docker
<span class="nb">sudo </span>usermod <span class="nt">-aG</span> docker <span class="k">${</span><span class="nv">USER</span><span class="k">}</span>  <span class="c"># Add current user to docker group</span>
newgrp docker  <span class="c"># Refresh group permissions</span>
</code></pre></div></div> <h3 id="2-create-docker-compose-file">2. Create Docker Compose File</h3> <p>Create <code class="language-plaintext highlighter-rouge">docker-compose.yml</code> with:</p> <div class="language-yaml highlighter-rouge"><div class="highlight"><pre class="highlight"><code><span class="na">version</span><span class="pi">:</span> <span class="s1">'</span><span class="s">3.8'</span>

<span class="na">services</span><span class="pi">:</span>
  <span class="na">db</span><span class="pi">:</span>
    <span class="na">image</span><span class="pi">:</span> <span class="s">mysql:5.7</span>
    <span class="na">volumes</span><span class="pi">:</span>
      <span class="pi">-</span> <span class="s">db_data:/var/lib/mysql</span>
    <span class="na">environment</span><span class="pi">:</span>
      <span class="na">MYSQL_ROOT_PASSWORD</span><span class="pi">:</span> <span class="s">your_root_password</span>
      <span class="na">MYSQL_DATABASE</span><span class="pi">:</span> <span class="s">wordpress</span>
      <span class="na">MYSQL_USER</span><span class="pi">:</span> <span class="s">wordpress</span>
      <span class="na">MYSQL_PASSWORD</span><span class="pi">:</span> <span class="s">wordpress</span>
    <span class="na">restart</span><span class="pi">:</span> <span class="s">unless-stopped</span>

  <span class="na">wordpress</span><span class="pi">:</span>
    <span class="na">depends_on</span><span class="pi">:</span>
      <span class="pi">-</span> <span class="s">db</span>
    <span class="na">image</span><span class="pi">:</span> <span class="s">wordpress:latest</span>
    <span class="na">ports</span><span class="pi">:</span>
      <span class="pi">-</span> <span class="s2">"</span><span class="s">8080:80"</span>  <span class="c1"># Binds host port 8080 to container port 80</span>
    <span class="na">volumes</span><span class="pi">:</span>
      <span class="pi">-</span> <span class="s">./wp-content:/var/www/html/wp-content</span>  <span class="c1"># Local folder binding</span>
    <span class="na">environment</span><span class="pi">:</span>
      <span class="na">WORDPRESS_DB_HOST</span><span class="pi">:</span> <span class="s">db:3306</span>
      <span class="na">WORDPRESS_DB_USER</span><span class="pi">:</span> <span class="s">wordpress</span>
      <span class="na">WORDPRESS_DB_PASSWORD</span><span class="pi">:</span> <span class="s">wordpress</span>
      <span class="na">WORDPRESS_DB_NAME</span><span class="pi">:</span> <span class="s">wordpress</span>
    <span class="na">restart</span><span class="pi">:</span> <span class="s">unless-stopped</span>

<span class="na">volumes</span><span class="pi">:</span>
  <span class="na">db_data</span><span class="pi">:</span>
</code></pre></div></div> <h3 id="3-key-configuration-details">3. Key Configuration Details</h3> <p><strong>Port Binding</strong>:</p> <ul> <li><code class="language-plaintext highlighter-rouge">ports: - "8080:80"</code> maps: <ul> <li>Host machine port: 8080 (accessible via <code class="language-plaintext highlighter-rouge">http://localhost:8080</code>)</li> <li>Container port: 80 (WordPress default port)</li> </ul> </li> </ul> <p><strong>Volume Binding</strong>:</p> <ul> <li><code class="language-plaintext highlighter-rouge">volumes: - ./wp-content:/var/www/html/wp-content</code> creates: <ul> <li>Local folder: <code class="language-plaintext highlighter-rouge">./wp-content</code> (relative to compose file)</li> <li>Container path: WordPress content directory</li> <li>Changes persist after container restarts</li> </ul> </li> </ul> <h3 id="4-launch-the-stack">4. Launch the Stack</h3> <div class="language-bash highlighter-rouge"><div class="highlight"><pre class="highlight"><code>docker-compose up <span class="nt">-d</span>
</code></pre></div></div> <h3 id="5-verification">5. Verification</h3> <ol> <li>Check running containers: <div class="language-bash highlighter-rouge"><div class="highlight"><pre class="highlight"><code>docker ps
</code></pre></div> </div> </li> <li>Access WordPress at <code class="language-plaintext highlighter-rouge">http://localhost:8080</code></li> <li>Check local filesystem for created <code class="language-plaintext highlighter-rouge">wp-content</code> folder</li> </ol> <h3 id="6-management-commands">6. Management Commands</h3> <ul> <li>Stop containers: <code class="language-plaintext highlighter-rouge">docker-compose down</code></li> <li>View logs: <code class="language-plaintext highlighter-rouge">docker-compose logs -f</code></li> <li>Update images: <code class="language-plaintext highlighter-rouge">docker-compose pull &amp;&amp; docker-compose up -d</code></li> </ul> <h2 id="troubleshooting">Troubleshooting</h2> <ol> <li>Port conflicts: Change left-side port in <code class="language-plaintext highlighter-rouge">ports</code> mapping (e.g., <code class="language-plaintext highlighter-rouge">8081:80</code>)</li> <li>Permission issues: <div class="language-bash highlighter-rouge"><div class="highlight"><pre class="highlight"><code><span class="nb">sudo chown</span> <span class="nt">-R</span> <span class="nv">$USER</span>:<span class="nv">$USER</span> ./wp-content
</code></pre></div> </div> </li> <li>Database errors: Verify credentials match in both service definitions</li> </ol>]]></content><author><name></name></author><category term="Docker"/><category term="WordPress"/><category term="Ubuntu"/><category term="Web-Development"/><summary type="html"><![CDATA[Guide for deploying WordPress with Docker on Ubuntu including port binding and volume mounting]]></summary></entry><entry><title type="html">Proximal Policy Optimization VS Q-learning</title><link href="https://chunde.github.io/blog/2025/PPO-VS-DQN/" rel="alternate" type="text/html" title="Proximal Policy Optimization VS Q-learning"/><published>2025-07-04T10:13:08+00:00</published><updated>2025-07-04T10:13:08+00:00</updated><id>https://chunde.github.io/blog/2025/PPO-VS-DQN</id><content type="html" xml:base="https://chunde.github.io/blog/2025/PPO-VS-DQN/"><![CDATA[<p>Proximal Policy Optimization (PPO) and Q-learning are both reinforcement learning (RL) algorithms, but they belong to different families and have distinct approaches to solving RL problems. Here‚Äôs a detailed comparison:</p> <hr/> <h3 id="1-core-approach"><strong>1. Core Approach</strong></h3> <ul> <li><strong>PPO (Policy Optimization - Actor-Critic Method)</strong>: <ul> <li>Learns a <strong>policy directly</strong> (a mapping from states to actions).</li> <li>Uses an <strong>actor-critic architecture</strong>: The actor improves the policy, while the critic evaluates the policy by estimating value functions (e.g., state-value or advantage).</li> <li>Optimizes the policy <strong>proximally</strong> (with a clipped objective) to avoid large, destabilizing updates.</li> </ul> </li> <li><strong>Q-learning (Value-Based Method)</strong>: <ul> <li>Learns a <strong>value function (Q-function)</strong>, which estimates the expected return for taking an action in a state and following the optimal policy thereafter.</li> <li>Uses <strong>temporal difference (TD) learning</strong> to update Q-values.</li> <li>Typically employs an <strong>Œµ-greedy policy</strong> for exploration (not part of the learned function).</li> </ul> </li> </ul> <hr/> <h3 id="2-policy-vs-value-learning"><strong>2. Policy vs. Value Learning</strong></h3> <ul> <li><strong>PPO</strong>: <ul> <li>Outputs a <strong>stochastic policy</strong> (probability distribution over actions).</li> <li>Can handle <strong>continuous action spaces</strong> naturally.</li> <li>On-policy: Requires fresh samples from the current policy for training.</li> </ul> </li> <li><strong>Q-learning</strong>: <ul> <li>Outputs a <strong>Q-table or Q-function</strong>, and the policy is derived by taking the action with the highest Q-value (argmax).</li> <li>Struggles with <strong>continuous actions</strong> (unless combined with techniques like DDPG).</li> <li>Off-policy: Can reuse past experiences (replay buffer).</li> </ul> </li> </ul> <hr/> <h3 id="3-exploration"><strong>3. Exploration</strong></h3> <ul> <li><strong>PPO</strong>: <ul> <li>Explores via the <strong>stochasticity of the policy</strong> (e.g., Gaussian noise for continuous actions).</li> <li>Does not require explicit exploration mechanisms like Œµ-greedy.</li> </ul> </li> <li><strong>Q-learning</strong>: <ul> <li>Relies on <strong>Œµ-greedy or Boltzmann exploration</strong> to try non-optimal actions.</li> <li>Without proper exploration, it can get stuck in suboptimal policies.</li> </ul> </li> </ul> <hr/> <h3 id="4-stability--sample-efficiency"><strong>4. Stability &amp; Sample Efficiency</strong></h3> <ul> <li><strong>PPO</strong>: <ul> <li>More stable due to <strong>clipped objective</strong> and trust-region updates.</li> <li>Less sample-efficient (requires on-policy data, though better than vanilla policy gradients).</li> </ul> </li> <li><strong>Q-learning</strong>: <ul> <li>Can be unstable due to <strong>bootstrapping</strong> and moving targets (mitigated by target networks in Deep Q-Networks, DQN).</li> <li>More sample-efficient (can reuse old data via replay buffers).</li> </ul> </li> </ul> <hr/> <h3 id="5-key-strengths"><strong>5. Key Strengths</strong></h3> <table> <thead> <tr> <th><strong>PPO</strong></th> <th><strong>Q-learning</strong></th> </tr> </thead> <tbody> <tr> <td>Works well for <strong>continuous action spaces</strong> (e.g., robotics).</td> <td>Simpler, works well for <strong>discrete actions</strong> (e.g., Atari games).</td> </tr> <tr> <td>Stable, less hyperparameter-sensitive.</td> <td>Highly sample-efficient with replay buffers.</td> </tr> <tr> <td>On-policy: Good for <strong>online learning</strong>.</td> <td>Off-policy: Can learn from <strong>old or expert data</strong>.</td> </tr> </tbody> </table> <hr/> <h3 id="6-when-to-use-which"><strong>6. When to Use Which?</strong></h3> <ul> <li>Use <strong>PPO</strong> when: <ul> <li>The action space is <strong>continuous</strong> or high-dimensional.</li> <li>You need <strong>stable, monotonic policy improvement</strong> (e.g., robotics, simulation control).</li> <li>On-policy learning is acceptable (though PPO is more sample-efficient than vanilla policy gradients).</li> </ul> </li> <li>Use <strong>Q-learning (or DQN)</strong> when: <ul> <li>Actions are <strong>discrete and low-dimensional</strong> (e.g., games, navigation).</li> <li>You want to leverage <strong>off-policy learning and replay buffers</strong>.</li> <li>You prefer simplicity and don‚Äôt need a stochastic policy.</li> </ul> </li> </ul> <hr/> <h3 id="7-extensions--hybrids"><strong>7. Extensions &amp; Hybrids</strong></h3> <ul> <li><strong>PPO</strong> variants: TRPO (predecessor), SAC (soft actor-critic, combines policy gradients and Q-learning).</li> <li><strong>Q-learning</strong> variants: DQN (deep Q-learning), Double DQN, Rainbow (combines multiple improvements).</li> <li><strong>Hybrids</strong>: Actor-Critic methods like DDPG (Q-learning + policy gradients) for continuous control.</li> </ul> <hr/> <h3 id="summary-table"><strong>Summary Table</strong></h3> <table> <thead> <tr> <th>Feature</th> <th>PPO</th> <th>Q-learning</th> </tr> </thead> <tbody> <tr> <td><strong>Type</strong></td> <td>Policy Gradient (Actor-Critic)</td> <td>Value-Based</td> </tr> <tr> <td><strong>Action Space</strong></td> <td>Continuous/Discrete</td> <td>Discrete (or hybrid via DDPG)</td> </tr> <tr> <td><strong>Policy</strong></td> <td>Stochastic (learned)</td> <td>Greedy (derived from Q)</td> </tr> <tr> <td><strong>Exploration</strong></td> <td>Policy stochasticity</td> <td>Œµ-greedy/Boltzmann</td> </tr> <tr> <td><strong>Sample Efficiency</strong></td> <td>Moderate (on-policy)</td> <td>High (off-policy)</td> </tr> <tr> <td><strong>Stability</strong></td> <td>High (clipped updates)</td> <td>Medium (requires tricks)</td> </tr> </tbody> </table> <p>Both algorithms are powerful but suited to different scenarios. PPO is often preferred for complex, continuous control tasks, while Q-learning (and its variants like DQN) excels in discrete, high-sample-efficiency settings.</p>]]></content><author><name></name></author><category term="AI"/><category term="NLP"/><category term="Algorithm"/><category term="RL"/><summary type="html"><![CDATA[Proximal Policy Optimization (PPO) and Q-learning are both reinforcement learning (RL) algorithms, but they belong to different families and have distinct approaches to solving RL problems. Here‚Äôs a detailed comparison:]]></summary></entry><entry><title type="html">Su-Schrieffer-Heeger (SSH) model</title><link href="https://chunde.github.io/blog/2025/SSH-Model/" rel="alternate" type="text/html" title="Su-Schrieffer-Heeger (SSH) model"/><published>2025-03-11T07:16:27+00:00</published><updated>2025-03-11T07:16:27+00:00</updated><id>https://chunde.github.io/blog/2025/SSH-Model</id><content type="html" xml:base="https://chunde.github.io/blog/2025/SSH-Model/"><![CDATA[<p>Let‚Äôs derive the edge states for a simple model: the <strong>Su-Schrieffer-Heeger (SSH) model</strong>. The SSH model is a one-dimensional lattice model that exhibits topological properties and edge states. It‚Äôs a great starting point to understand how edge states emerge in topological systems.</p> <hr/> <h3 id="1-the-ssh-model"><strong>1. The SSH Model</strong></h3> <p>The SSH model describes electrons hopping on a 1D chain with alternating hopping amplitudes \(t_1\) and \(t_2\). The Hamiltonian is:</p> \[H = \sum_{i} \left( t_1 c_{A,i}^\dagger c_{B,i} + t_2 c_{B,i}^\dagger c_{A,i+1} + \text{h.c.} \right),\] <p>where:</p> <ul> <li>\(c_{A,i}^\dagger\) and \(c_{B,i}^\dagger\) create electrons on sublattices \(A\) and \(B\) at site \(i\),</li> <li>\(t_1\) and \(t_2\) are the intra-cell and inter-cell hopping amplitudes, respectively.</li> </ul> <hr/> <h3 id="2-bulk-hamiltonian-in-momentum-space"><strong>2. Bulk Hamiltonian in Momentum Space</strong></h3> <p>To study the bulk properties, we Fourier transform the Hamiltonian into momentum space. Define the Fourier transforms:</p> \[c_{A,i} = \frac{1}{\sqrt{N}} \sum_k e^{ik \cdot i} c_{A,k}, \quad c_{B,i} = \frac{1}{\sqrt{N}} \sum_k e^{ik \cdot i} c_{B,k},\] <p>where \(N\) is the number of unit cells, and \(k\) is the crystal momentum. The Hamiltonian becomes:</p> \[H = \sum_k \begin{pmatrix} c_{A,k}^\dagger &amp; c_{B,k}^\dagger \end{pmatrix} H(k) \begin{pmatrix} c_{A,k} \\ c_{B,k} \end{pmatrix},\] <p>where the bulk Hamiltonian \(H(k)\) is:</p> \[H(k) = \begin{pmatrix} 0 &amp; t_1 + t_2 e^{-ik} \\ t_1 + t_2 e^{ik} &amp; 0 \end{pmatrix}.\] <p>This can be written as:</p> \[H(k) = \vec{d}(k) \cdot \vec{\sigma},\] <p>where \(\vec{\sigma} = (\sigma_x, \sigma_y, \sigma_z)\) are the Pauli matrices, and:</p> \[\vec{d}(k) = (t_1 + t_2 \cos k, \, t_2 \sin k, \, 0).\] <hr/> <h3 id="3-topological-invariant"><strong>3. Topological Invariant</strong></h3> <p>The SSH model is characterized by a topological invariant called the <strong>winding number</strong> \(W\), which is defined as:</p> \[W = \frac{1}{2\pi} \int_{-\pi}^{\pi} dk \, \frac{d\phi(k)}{dk},\] <p>where \(\phi(k) = \arg(d_x(k) + i d_y(k))\). For the SSH model: If \(|t_1| &lt; |t_2|\), \(W = 1\) (topologically non-trivial). If \(|t_1| &gt; |t_2|\), \(W = 0\) (topologically trivial).</p> <hr/> <h3 id="4-edge-states-in-the-topological-phase"><strong>4. Edge States in the Topological Phase</strong></h3> <p>When \(|t_1| &lt; |t_2|\), the system is in the topological phase, and edge states appear at the boundaries of a finite chain. Let‚Äôs derive these edge states.</p> <h4 id="finite-chain-with-open-boundary-conditions"><strong>Finite Chain with Open Boundary Conditions</strong></h4> <p>Consider a finite chain with \(N\) unit cells and open boundary conditions. The Hamiltonian is:</p> \[H = \sum_{i=1}^{N-1} \left( t_1 c_{A,i}^\dagger c_{B,i} + t_2 c_{B,i}^\dagger c_{A,i+1} + \text{h.c.} \right).\] <p>We look for zero-energy eigenstates</p> \[|\psi \rangle = \sum_i (\psi_{A,i} c_{A,i}^\dagger + \psi_{B,i} c_{B,i}^\dagger) |0\rangle\] <p>that satisfy</p> \[H|\psi \rangle = 0\] <h4 id="recursion-relations"><strong>Recursion Relations</strong></h4> <p>From the Schr√∂dinger equation \(H|\psi \rangle = 0\), we get the recursion relations: \(t_1 \psi_{B,i} + t_2 \psi_{B,i-1} = 0, \quad t_1 \psi_{A,i} + t_2 \psi_{A,i+1} = 0.\)</p> <p>Assume an exponential ansatz for the wavefunctions:</p> \[\psi_{A,i} = \alpha^i, \quad \psi_{B,i} = \beta^i.\] <p>Substituting into the recursion relations, we get:</p> \[t_1 \beta^i + t_2 \beta^{i-1} = 0 \implies t_1 \beta + t_2 = 0 \implies \beta = -\frac{t_2}{t_1},\] \[t_1 \alpha^i + t_2 \alpha^{i+1} = 0 \implies t_1 + t_2 \alpha = 0 \implies \alpha = -\frac{t_1}{t_2}.\] <h4 id="localization-of-edge-states"><strong>Localization of Edge States</strong></h4> <p>For \(|t_1| &lt; |t_2|\), \(|\alpha| &lt; 1\) and \(|\beta| &gt; 1\). This means: \(\psi_{A,i}\) decays exponentially from the left edge (\(i = 1\)). \(\psi_{B,i}\) decays exponentially from the right edge (\(i = N\)).</p> <p>Thus, the edge states are localized at the ends of the chain.</p> <hr/> <h3 id="5-summary"><strong>5. Summary</strong></h3> <p>The SSH model exhibits edge states in the topological phase \(|t_1| &lt; |t_2|\).</p> <ul> <li>These edge states are zero-energy modes localized at the ends of the chain.</li> <li>The existence of edge states is protected by the topological invariant (winding number).</li> </ul> <p>This derivation illustrates how edge states emerge in a simple topological system. Similar principles apply to more complex models like 2D topological insulators and quantum Hall systems.</p>]]></content><author><name></name></author><category term="Quantum"/><category term="Simulation"/><category term="Physics"/><summary type="html"><![CDATA[A derivation of edge stae in SSH model]]></summary></entry><entry><title type="html">Check IR and UV Errors in Numerical Simulations for Physics</title><link href="https://chunde.github.io/blog/2025/IR-UV-Error/" rel="alternate" type="text/html" title="Check IR and UV Errors in Numerical Simulations for Physics"/><published>2025-03-02T14:14:53+00:00</published><updated>2025-03-02T14:14:53+00:00</updated><id>https://chunde.github.io/blog/2025/IR-UV-Error</id><content type="html" xml:base="https://chunde.github.io/blog/2025/IR-UV-Error/"><![CDATA[<p>Numerical simulations are a cornerstone of modern physics, enabling researchers to study complex systems that are often intractable analytically. However, numerical methods come with their own set of challenges, particularly in ensuring the accuracy and stability of the results. Two common sources of error in numerical simulations are <strong>infrared (IR) errors</strong> and <strong>ultraviolet (UV) errors</strong>. These errors arise from the discretization of continuous systems and can significantly impact the reliability of simulations. In this article, we will explore how to check for IR and UV errors using a practical example involving a quantum wave function.</p> <hr/> <h2 id="understanding-ir-and-uv-errors">Understanding IR and UV Errors</h2> <ul> <li><strong>Infrared (IR) Errors</strong> IR errors are associated with the <strong>long-wavelength (low-frequency)</strong> behavior of a system. In numerical simulations, these errors occur when the system size (or simulation box) is too small to capture the relevant long-wavelength physics. For example, in quantum mechanics, IR errors can manifest as an inability to properly describe the ground state or low-energy excitations of a system.</li> <li>. <strong>Ultraviolet (UV) Errors</strong> UV errors, on the other hand, are related to the <strong>short-wavelength (high-frequency)</strong> behavior of a system. These errors arise when the grid spacing (or resolution) is too coarse to accurately capture rapid variations in the system. In quantum mechanics, UV errors can lead to inaccuracies in describing high-energy states or fast oscillations in the wave function.</li> </ul> <hr/> <h2 id="a-practical-example-checking-ir-and-uv-errors-for-a-quantum-wave-function">A Practical Example: Checking IR and UV Errors for a Quantum Wave Function</h2> <p>To illustrate how to check for IR and UV errors, let‚Äôs consider a quantum wave function \(\psi(x)\) defined on a discrete grid. We will use Python to analyze the wave function in both real space and momentum space, ensuring that the simulation is free from significant IR and UV errors.</p> <h3 id="step-1-fourier-transform-the-wave-function">Step 1: Fourier Transform the Wave Function</h3> <p>The key tool for analyzing IR and UV errors is the <strong>Fourier transform</strong>, which converts the wave function from real space to momentum space. In momentum space, long-wavelength (IR) components correspond to low-frequency modes, while short-wavelength (UV) components correspond to high-frequency modes.</p> <div class="language-python highlighter-rouge"><div class="highlight"><pre class="highlight"><code><span class="kn">import</span> <span class="n">numpy</span> <span class="k">as</span> <span class="n">np</span>

<span class="c1"># Perform Fourier transform
</span><span class="n">psi_k</span> <span class="o">=</span> <span class="n">np</span><span class="p">.</span><span class="n">fft</span><span class="p">.</span><span class="nf">fft</span><span class="p">(</span><span class="n">psi</span><span class="p">)</span>
</code></pre></div></div> <p>Here, <code class="language-plaintext highlighter-rouge">psi</code> is the wave function in real space, and <code class="language-plaintext highlighter-rouge">psi_k</code> is its representation in momentum space.</p> <hr/> <h3 id="step-2-compute-the-logarithmic-amplitude">Step 2: Compute the Logarithmic Amplitude</h3> <p>To assess the magnitude of the wave function in both real and momentum spaces, we compute the logarithmic amplitude:</p> <div class="language-python highlighter-rouge"><div class="highlight"><pre class="highlight"><code><span class="n">psi_log</span> <span class="o">=</span> <span class="n">np</span><span class="p">.</span><span class="nf">log10</span><span class="p">(</span><span class="n">np</span><span class="p">.</span><span class="nf">abs</span><span class="p">(</span><span class="n">psi</span><span class="p">))</span>       <span class="c1"># Real space
</span><span class="n">psi_log_k</span> <span class="o">=</span> <span class="n">np</span><span class="p">.</span><span class="nf">log10</span><span class="p">(</span><span class="n">np</span><span class="p">.</span><span class="nf">abs</span><span class="p">(</span><span class="n">psi_k</span><span class="p">))</span>   <span class="c1"># Momentum space
</span></code></pre></div></div> <p>The logarithmic amplitude compresses the dynamic range of the wave function, making it easier to identify small values that might be close to machine precision.</p> <hr/> <h3 id="step-3-check-for-uv-errors">Step 3: Check for UV Errors</h3> <p>UV errors can be detected by examining the high-frequency components of the wave function in momentum space. If the grid spacing is too coarse, the high-frequency components will not be properly resolved, leading to aliasing or other numerical artifacts.</p> <div class="language-python highlighter-rouge"><div class="highlight"><pre class="highlight"><code><span class="c1"># Check if high-frequency components are suppressed
</span><span class="k">assert</span> <span class="n">np</span><span class="p">.</span><span class="nf">min</span><span class="p">(</span><span class="n">psi_log_k</span><span class="p">)</span> <span class="o">&lt;</span> <span class="o">-</span><span class="mi">15</span>
</code></pre></div></div> <p>This assertion ensures that the smallest values in the momentum-space wave function are close to machine precision (typically around (10^{-16})). If this condition is not met, it indicates that the grid spacing is insufficient to resolve the high-frequency components, leading to UV errors.</p> <hr/> <h3 id="step-4-check-for-ir-errors">Step 4: Check for IR Errors</h3> <p>IR errors can be detected by examining the low-frequency components of the wave function in real space. If the system size is too small, the long-wavelength physics will not be properly captured.</p> <div class="language-python highlighter-rouge"><div class="highlight"><pre class="highlight"><code><span class="c1"># Check if low-frequency components are well-resolved
</span><span class="k">assert</span> <span class="n">np</span><span class="p">.</span><span class="nf">min</span><span class="p">(</span><span class="n">psi_log</span><span class="p">)</span> <span class="o">&lt;</span> <span class="o">-</span><span class="mi">15</span>
</code></pre></div></div> <p>This assertion ensures that the smallest values in the real-space wave function are also close to machine precision. If this condition is not met, it indicates that the system size is insufficient to capture the long-wavelength behavior, leading to IR errors.</p> <hr/> <h3 id="step-5-visualize-the-results-optional">Step 5: Visualize the Results (Optional)</h3> <p>To gain further insight, we can visualize the wave function in both real and momentum spaces:</p> <div class="language-python highlighter-rouge"><div class="highlight"><pre class="highlight"><code><span class="kn">import</span> <span class="n">matplotlib.pyplot</span> <span class="k">as</span> <span class="n">plt</span>

<span class="k">def</span> <span class="nf">check_uv_ir_error</span><span class="p">(</span><span class="n">psi</span><span class="p">,</span> <span class="n">plot</span><span class="o">=</span><span class="bp">False</span><span class="p">):</span>
    <span class="n">psi_k</span> <span class="o">=</span> <span class="n">np</span><span class="p">.</span><span class="n">fft</span><span class="p">.</span><span class="nf">fft</span><span class="p">(</span><span class="n">psi</span><span class="p">)</span>
    <span class="n">psi_log</span> <span class="o">=</span> <span class="n">np</span><span class="p">.</span><span class="nf">log10</span><span class="p">(</span><span class="n">np</span><span class="p">.</span><span class="nf">abs</span><span class="p">(</span><span class="n">psi</span><span class="p">))</span>
    <span class="n">psi_log_k</span> <span class="o">=</span> <span class="n">np</span><span class="p">.</span><span class="nf">log10</span><span class="p">(</span><span class="n">np</span><span class="p">.</span><span class="nf">abs</span><span class="p">(</span><span class="n">psi_k</span><span class="p">))</span>
    
    <span class="k">if</span> <span class="n">plot</span><span class="p">:</span>
        <span class="n">plt</span><span class="p">.</span><span class="nf">figure</span><span class="p">()</span>
        <span class="n">plt</span><span class="p">.</span><span class="nf">plot</span><span class="p">(</span><span class="n">psi_log_k</span><span class="p">,</span> <span class="n">label</span><span class="o">=</span><span class="sh">"</span><span class="s">Momentum Space</span><span class="sh">"</span><span class="p">)</span>
        <span class="n">plt</span><span class="p">.</span><span class="nf">plot</span><span class="p">(</span><span class="n">psi_log</span><span class="p">,</span> <span class="sh">'</span><span class="s">--</span><span class="sh">'</span><span class="p">,</span> <span class="n">label</span><span class="o">=</span><span class="sh">"</span><span class="s">Real Space</span><span class="sh">"</span><span class="p">)</span>
        <span class="n">plt</span><span class="p">.</span><span class="nf">xlabel</span><span class="p">(</span><span class="sh">"</span><span class="s">Grid Points</span><span class="sh">"</span><span class="p">)</span>
        <span class="n">plt</span><span class="p">.</span><span class="nf">ylabel</span><span class="p">(</span><span class="sh">"</span><span class="s">Log Amplitude</span><span class="sh">"</span><span class="p">)</span>
        <span class="n">plt</span><span class="p">.</span><span class="nf">legend</span><span class="p">()</span>
        <span class="n">plt</span><span class="p">.</span><span class="nf">title</span><span class="p">(</span><span class="sh">"</span><span class="s">IR and UV Error Check</span><span class="sh">"</span><span class="p">)</span>
        <span class="n">plt</span><span class="p">.</span><span class="nf">show</span><span class="p">()</span>
    
    <span class="c1"># Assertions for UV and IR errors
</span>    <span class="k">assert</span> <span class="n">np</span><span class="p">.</span><span class="nf">min</span><span class="p">(</span><span class="n">psi_log_k</span><span class="p">)</span> <span class="o">&lt;</span> <span class="o">-</span><span class="mi">15</span><span class="p">,</span> <span class="sh">"</span><span class="s">UV error detected: High-frequency components not suppressed!</span><span class="sh">"</span>
    <span class="k">assert</span> <span class="n">np</span><span class="p">.</span><span class="nf">min</span><span class="p">(</span><span class="n">psi_log</span><span class="p">)</span> <span class="o">&lt;</span> <span class="o">-</span><span class="mi">15</span><span class="p">,</span> <span class="sh">"</span><span class="s">IR error detected: Low-frequency components not resolved!</span><span class="sh">"</span>
</code></pre></div></div> <p>This function not only checks for errors but also provides a visual representation of the wave function in both spaces, making it easier to diagnose issues.</p> <hr/> <h2 id="key-takeaways">Key Takeaways</h2> <ol> <li><strong>IR Errors</strong>: Arise from insufficient system size. Check the low-frequency components in real space to ensure they are well-resolved.</li> <li><strong>UV Errors</strong>: Arise from insufficient grid resolution. Check the high-frequency components in momentum space to ensure they are properly suppressed.</li> <li><strong>Fourier Transform</strong>: A powerful tool for analyzing both IR and UV errors by converting the wave function between real and momentum spaces.</li> <li><strong>Machine Precision</strong>: Use logarithmic amplitudes to compare values against machine precision, ensuring numerical accuracy.</li> </ol> <hr/> <h2 id="conclusion">Conclusion</h2> <p>Checking for IR and UV errors is a critical step in ensuring the accuracy and reliability of numerical simulations in physics. By analyzing the wave function in both real and momentum spaces, we can identify and address issues related to system size and grid resolution. The Python code provided in this article offers a practical and efficient way to perform these checks, helping researchers avoid common pitfalls in numerical simulations.</p> <p>Whether you‚Äôre simulating quantum systems, fluid dynamics, or any other physical phenomenon, understanding and mitigating IR and UV errors will lead to more robust and trustworthy results. Happy simulating!</p>]]></content><author><name></name></author><category term="Quantum"/><category term="Simulation"/><category term="Physics"/><summary type="html"><![CDATA[A Practical Guide on How to Check IR and UV Errors in Numerical Simulations for Physics]]></summary></entry><entry><title type="html">LacryMmaria Olor</title><link href="https://chunde.github.io/blog/2025/Lacrymaria-Olor/" rel="alternate" type="text/html" title="LacryMmaria Olor"/><published>2025-01-11T04:58:15+00:00</published><updated>2025-01-11T04:58:15+00:00</updated><id>https://chunde.github.io/blog/2025/Lacrymaria-Olor</id><content type="html" xml:base="https://chunde.github.io/blog/2025/Lacrymaria-Olor/"><![CDATA[<p><strong>Lacrymaria olor</strong>, a species of single-celled organism known for its remarkable ability to extend and retract a long, flexible ‚Äúneck,‚Äù captures food through a combination of structural and behavioral adaptations.</p> <h3 id="structural-features">Structural Features:</h3> <ol> <li> <p><strong>Elastic Cytoplasm</strong>: The ‚Äúneck‚Äù of Lacrymaria olor is an extension of its cytoplasm, which can stretch up to 7 times its body length. The cytoplasm‚Äôs elasticity allows the organism to extend its neck in different directions.</p> </li> <li> <p><strong>Microtubules</strong>: The neck contains microtubules, which are part of the cytoskeleton. These microtubules provide structural support and are crucial for the extension and retraction of the neck. They guide the movement of the cytoplasm, ensuring that the neck can be controlled accurately.</p> </li> <li> <p><strong>Cilia</strong>: The organism is covered in cilia, which are tiny hair-like structures that help in movement and feeding. Cilia around the neck assist in directing food particles towards the mouth region (cytostome).</p> </li> </ol> <h3 id="behavioral-mechanisms">Behavioral Mechanisms:</h3> <ol> <li> <p><strong>Seeking Food</strong>: Lacrymaria olor moves its neck in a searching pattern, extending it in various directions to explore its environment. This movement increases the chance of encountering prey or food particles.</p> </li> <li> <p><strong>Prey Capture</strong>: When the neck makes contact with food, it wraps around the particle and retracts, pulling the prey toward the main body. The food is then engulfed through phagocytosis at the cytostome.</p> </li> <li> <p><strong>Sensory Response</strong>: The organism‚Äôs movement and extension are partially controlled by chemical signals. Lacrymaria olor can sense the presence of food through chemical cues in the water and direct its neck towards the source.</p> </li> </ol> <p>Overall, the ability of Lacrymaria olor to extend its neck and capture food is a fascinating example of how single-celled organisms can exhibit complex behaviors and structural adaptations to survive in their microscopic environments.</p> <iframe width="720" height="480" src="https://www.youtube.com/embed/sq6Y54mxjOg?si=173Jb7XProjuKXuZ" title="YouTube video player" frameborder="0" allow="accelerometer; autoplay; clipboard-write; encrypted-media; gyroscope; picture-in-picture; web-share" referrerpolicy="strict-origin-when-cross-origin" allowfullscreen=""></iframe>]]></content><author><name></name></author><category term="sample-posts"/><category term="Biology"/><summary type="html"><![CDATA[this is what included tabs in a post could look like]]></summary></entry></feed>